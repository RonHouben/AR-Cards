{"version":3,"sources":["js/threejs/GLTFLoader.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["THREE","GLTFLoader","manager","undefined","DefaultLoadingManager","dracoLoader","prototype","constructor","crossOrigin","load","url","onLoad","onProgress","onError","scope","resourcePath","path","LoaderUtils","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","FileLoader","setPath","setResponseType","data","parse","gltf","setCrossOrigin","value","setResourcePath","setDRACOLoader","content","extensions","magic","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","json","JSON","asset","version","Error","extensionsUsed","i","length","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","indexOf","warn","parser","GLTFParser","GLTFRegistry","objects","get","key","add","object","remove","removeAll","DDSLoader","name","ddsLoader","extension","lightDefs","lights","loadLight","lightIndex","lightDef","lightNode","color","Color","fromArray","range","type","DirectionalLight","target","position","set","PointLight","distance","SpotLight","spot","innerConeAngle","outerConeAngle","Math","PI","angle","penumbra","decay","intensity","Promise","resolve","getMaterialType","material","MeshBasicMaterial","extendParams","materialParams","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","push","assignTexture","all","BINARY_EXTENSION_BUFFER_NAME","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","body","headerView","DataView","header","slice","getUint32","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","threeAttributeName","ATTRIBUTES","toLowerCase","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","geometry","attribute","extendTexture","texture","transform","clone","offset","rotation","scale","repeat","texCoord","needsUpdate","specularGlossinessParams","ShaderMaterial","params","pbrSpecularGlossiness","shader","ShaderLib","uniforms","UniformsUtils","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","fog","transparent","isGLTFSpecularGlossinessMaterial","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","il","refreshUniforms","renderer","scene","camera","group","diffuse","copy","multiplyScalar","uvScaleMap","isWebGLRenderTarget","matrixAutoUpdate","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","call","Object","create","copySampleValue_","index","result","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","p","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","FLOAT","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","LINEAR","REPEAT","SAMPLER_2D","POINTS","LINES","LINE_LOOP","LINE_STRIP","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","UNSIGNED_BYTE","UNSIGNED_SHORT","WEBGL_TYPE","Number","Matrix3","Matrix4","Vector2","Vector3","Vector4","Texture","Int8Array","Int16Array","Uint16Array","Uint32Array","Float32Array","WEBGL_FILTERS","NearestFilter","LinearFilter","NearestMipMapNearestFilter","LinearMipMapNearestFilter","NearestMipMapLinearFilter","LinearMipMapLinearFilter","WEBGL_WRAPPINGS","ClampToEdgeWrapping","MirroredRepeatWrapping","RepeatWrapping","WEBGL_SIDES","BackSide","FrontSide","WEBGL_DEPTH_FUNCS","NeverDepth","LessDepth","EqualDepth","LessEqualDepth","GreaterEqualDepth","NotEqualDepth","AlwaysDepth","WEBGL_BLEND_EQUATIONS","AddEquation","SubtractEquation","ReverseSubtractEquation","WEBGL_BLEND_FUNCS","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","WEBGL_TYPE_SIZES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","InterpolateLinear","STEP","InterpolateDiscrete","STATES_ENABLES","ALPHA_MODES","OPAQUE","MASK","BLEND","MIME_TYPE_FORMATS","RGBAFormat","RGBFormat","resolveURL","test","defaultMaterial","createDefaultMaterial","MeshStandardMaterial","depthTest","side","addUnknownExtensionsToUserData","knownExtensions","objectDef","userData","gltfExtensions","assignExtrasToUserData","gltfDef","extras","addMorphTargets","targets","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","pendingAccessor","normal","morphPositions","morphNormals","cloneBufferAttribute","positionAttribute","j","jl","count","setXYZ","getX","getY","getZ","normalAttribute","morphAttributes","updateMorphTargets","mesh","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","isObjectEqual","a","b","keys","createPrimitiveKey","primitiveDef","dracoExtension","geometryKey","indices","createAttributesKey","mode","attributesKey","sort","isInterleavedBufferAttribute","itemSize","getW","BufferAttribute","options","cache","primitiveCache","textureLoader","TextureLoader","fileLoader","markDefs","getDependencies","dependencies","scenes","animations","cameras","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","defs","def","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","accessorIndex","sparse","pendingBufferViews","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","bufferAttribute","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","itemSizeIndices","SCALAR","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","URL","window","webkitURL","textureDef","textures","textureExtensions","images","sourceURI","isObjectURL","blob","Blob","mimeType","createObjectURL","Loader","Handlers","revokeObjectURL","flipY","format","samplers","sampler","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","assignFinalMaterial","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","uuid","pointsMaterial","PointsMaterial","Material","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","VertexColors","flatShading","morphTargets","uv2","uv","log","addAttribute","onBeforeRender","materialIndex","materialDef","materials","materialType","materialExtensions","sgExtension","kmuExtension","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","sRGBEncoding","addPrimitiveAttributes","assignAttributeAccessor","accessor","gltfAttributeName","setIndex","loadGeometries","primitives","createDracoPrimitive","cached","promise","geometryPromise","BufferGeometry","meshIndex","originalMaterials","geometries","SkinnedMesh","Mesh","normalizeSkinWeights","drawMode","TriangleStripDrawMode","TriangleFanDrawMode","LineSegments","Line","LineLoop","Points","Group","cameraIndex","cameraDef","PerspectiveCamera","radToDeg","yfov","aspectRatio","znear","zfar","OrthographicCamera","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","id","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","track","createInterpolant","InterpolantFactoryMethodGLTFCubicSpline","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","Bone","instanceNum","children","o","light","Object3D","PropertyBinding","sanitizeNodeName","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","isGroup","bones","boneInverses","jointNode","mat","bind","Skeleton","matrixWorld","child","sceneIndex","sceneDef","Scene","nodeIds","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","handled","assets","forEach","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","message","stack","overlay","createErrorOverlay","document","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","concat","Function","deps","some","cb"],"mappings":"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","file":"GLTFLoader.ab0085df.js","sourceRoot":"../src","sourcesContent":["/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nTHREE.GLTFLoader = ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.dracoLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar resourcePath;\n\n\t\t\tif ( this.resourcePath !== undefined ) {\n\n\t\t\t\tresourcePath = this.resourcePath;\n\n\t\t\t} else if ( this.path !== undefined ) {\n\n\t\t\t\tresourcePath = this.path;\n\n\t\t\t} else {\n\n\t\t\t\tresourcePath = THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\t}\n\n\t\t\t// Tells the LoadingManager to track an extra item, which resolves after\n\t\t\t// the model is fully loaded. This means the count of items loaded will\n\t\t\t// be incorrect, but ensures manager.onLoad() does not fire early.\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tvar _onError = function ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t};\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, resourcePath, function ( gltf ) {\n\n\t\t\t\t\t\tonLoad( gltf );\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, _onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t_onError( e );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, _onError );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( value ) {\n\n\t\t\tthis.resourcePath = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tfor ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\n\n\t\t\t\t\tvar extensionName = json.extensionsUsed[ i ];\n\t\t\t\t\tvar extensionsRequired = json.extensionsRequired || [];\n\n\t\t\t\t\tswitch ( extensionName ) {\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFLightsExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_UNLIT:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\n\t\t\t\t\t\t\textensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.MSFT_TEXTURE_DDS:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension();\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EXTENSIONS.KHR_TEXTURE_TRANSFORM:\n\t\t\t\t\t\t\textensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] = new GLTFTextureTransformExtension( json );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tif ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.resourcePath || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( onLoad, onError );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\n\t\tKHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\n\t\tMSFT_TEXTURE_DDS: 'MSFT_texture_dds'\n\t};\n\n\t/**\n\t * DDS Texture Extension\n\t *\n\t * Specification:\n\t * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */\n\tfunction GLTFTextureDDSExtension() {\n\n\t\tif ( ! THREE.DDSLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.MSFT_TEXTURE_DDS;\n\t\tthis.ddsLoader = new THREE.DDSLoader();\n\n\t}\n\n\t/**\n\t * Lights Extension\n\t *\n\t * Specification: PENDING\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\n\t\tthis.lightDefs = extension.lights || [];\n\n\t}\n\n\tGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\n\n\t\tvar lightDef = this.lightDefs[ lightIndex ];\n\t\tvar lightNode;\n\n\t\tvar color = new THREE.Color( 0xffffff );\n\t\tif ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\n\n\t\tvar range = lightDef.range !== undefined ? lightDef.range : 0;\n\n\t\tswitch ( lightDef.type ) {\n\n\t\t\tcase 'directional':\n\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tcase 'point':\n\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\tbreak;\n\n\t\t\tcase 'spot':\n\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\tlightNode.distance = range;\n\t\t\t\t// Handle spotlight properties.\n\t\t\t\tlightDef.spot = lightDef.spot || {};\n\t\t\t\tlightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\n\t\t\t\tlightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\n\t\t\t\tlightNode.angle = lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\n\t\t\t\tlightNode.target.position.set( 0, 0, - 1 );\n\t\t\t\tlightNode.add( lightNode.target );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\n\n\t\t}\n\n\t\t// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n\t\t// here, because node-level parsing will only override position if explicitly specified.\n\t\tlightNode.position.set( 0, 0, 0 );\n\n\t\tlightNode.decay = 2;\n\n\t\tif ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\n\n\t\tlightNode.name = lightDef.name || ( 'light_' + lightIndex );\n\n\t\treturn Promise.resolve( lightNode );\n\n\t};\n\n\t/**\n\t * Unlit Materials Extension (pending)\n\t *\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\n\t */\n\tfunction GLTFMaterialsUnlitExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = material.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\n\t */\n\tfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.json = json;\n\t\tthis.dracoLoader = dracoLoader;\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar json = this.json;\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\t\tvar attributeNormalizedMap = {};\n\t\tvar attributeTypeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tthreeAttributeMap[ threeAttributeName ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\tfor ( attributeName in primitive.attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ attributeName ] || attributeName.toLowerCase();\n\n\t\t\tif ( gltfAttributeMap[ attributeName ] !== undefined ) {\n\n\t\t\t\tvar accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\n\t\t\t\tvar componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t\tattributeTypeMap[ threeAttributeName ] = componentType;\n\t\t\t\tattributeNormalizedMap[ threeAttributeName ] = accessorDef.normalized === true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\n\n\t\t\t\t\tfor ( var attributeName in geometry.attributes ) {\n\n\t\t\t\t\t\tvar attribute = geometry.attributes[ attributeName ];\n\t\t\t\t\t\tvar normalized = attributeNormalizedMap[ attributeName ];\n\n\t\t\t\t\t\tif ( normalized !== undefined ) attribute.normalized = normalized;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tresolve( geometry );\n\n\t\t\t\t}, threeAttributeMap, attributeTypeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Texture Transform Extension\n\t *\n\t * Specification:\n\t */\n\tfunction GLTFTextureTransformExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\n\n\t}\n\n\tGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\n\n\t\ttexture = texture.clone();\n\n\t\tif ( transform.offset !== undefined ) {\n\n\t\t\ttexture.offset.fromArray( transform.offset );\n\n\t\t}\n\n\t\tif ( transform.rotation !== undefined ) {\n\n\t\t\ttexture.rotation = transform.rotation;\n\n\t\t}\n\n\t\tif ( transform.scale !== undefined ) {\n\n\t\t\ttexture.repeat.fromArray( transform.scale );\n\n\t\t}\n\n\t\tif ( transform.texCoord !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\n\n\t\t}\n\n\t\ttexture.needsUpdate = true;\n\n\t\treturn texture;\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn THREE.ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( params, material, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = material.extensions[ this.name ];\n\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tparams.vertexShader = shader.vertexShader;\n\t\t\t\tparams.fragmentShader = fragmentShader;\n\t\t\t\tparams.uniforms = uniforms;\n\t\t\t\tparams.defines = { 'STANDARD': '' };\n\n\t\t\t\tparams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tparams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tparams.color.fromArray( array );\n\t\t\t\t\tparams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture ) );\n\n\t\t\t\t}\n\n\t\t\t\tparams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tparams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tparams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tparams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'glossinessMap', specGlossMapDef ) );\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'specularMap', specGlossMapDef ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {THREE.ShaderMaterial} source\n\t\t\t * @return {THREE.ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\ttarget[ params[ i ] ] = source[ params[ i ] ];\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.envMap ) {\n\n\t\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\t\tuniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\n\n\t\t// Copies a sample value to the result buffer. See description of glTF\n\t\t// CUBICSPLINE values layout in interpolate_() function below.\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tvalueSize = this.valueSize,\n\t\t\toffset = index * valueSize * 3 + valueSize;\n\n\t\tfor ( var i = 0; i !== valueSize; i ++ ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\t\tvar s0 = 1 - s2;\n\t\tvar s1 = s3 - pp + p;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ]; // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_TYPE = {\n\t\t5126: Number,\n\t\t//35674: THREE.Matrix2,\n\t\t35675: THREE.Matrix3,\n\t\t35676: THREE.Matrix4,\n\t\t35664: THREE.Vector2,\n\t\t35665: THREE.Vector3,\n\t\t35666: THREE.Vector4,\n\t\t35678: THREE.Texture\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipMapNearestFilter,\n\t\t9985: THREE.LinearMipMapNearestFilter,\n\t\t9986: THREE.NearestMipMapLinearFilter,\n\t\t9987: THREE.LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_SIDES = {\n\t\t1028: THREE.BackSide, // Culling front\n\t\t1029: THREE.FrontSide // Culling back\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\n\t};\n\n\tvar WEBGL_DEPTH_FUNCS = {\n\t\t512: THREE.NeverDepth,\n\t\t513: THREE.LessDepth,\n\t\t514: THREE.EqualDepth,\n\t\t515: THREE.LessEqualDepth,\n\t\t516: THREE.GreaterEqualDepth,\n\t\t517: THREE.NotEqualDepth,\n\t\t518: THREE.GreaterEqualDepth,\n\t\t519: THREE.AlwaysDepth\n\t};\n\n\tvar WEBGL_BLEND_EQUATIONS = {\n\t\t32774: THREE.AddEquation,\n\t\t32778: THREE.SubtractEquation,\n\t\t32779: THREE.ReverseSubtractEquation\n\t};\n\n\tvar WEBGL_BLEND_FUNCS = {\n\t\t0: THREE.ZeroFactor,\n\t\t1: THREE.OneFactor,\n\t\t768: THREE.SrcColorFactor,\n\t\t769: THREE.OneMinusSrcColorFactor,\n\t\t770: THREE.SrcAlphaFactor,\n\t\t771: THREE.OneMinusSrcAlphaFactor,\n\t\t772: THREE.DstAlphaFactor,\n\t\t773: THREE.OneMinusDstAlphaFactor,\n\t\t774: THREE.DstColorFactor,\n\t\t775: THREE.OneMinusDstColorFactor,\n\t\t776: THREE.SrcAlphaSaturateFactor\n\t\t// The followings are not supported by Three.js yet\n\t\t//32769: CONSTANT_COLOR,\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\n\t\t//32771: CONSTANT_ALPHA,\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTANGENT: 'tangent',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tJOINTS_0: 'skinIndex',\n\t};\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: undefined, // We use a custom interpolant (GLTFCubicSplineInterpolation) for CUBICSPLINE tracks. Each\n\t\t                        // keyframe track will be initialized with a default interpolation type, then modified.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar STATES_ENABLES = {\n\t\t2884: 'CULL_FACE',\n\t\t2929: 'DEPTH_TEST',\n\t\t3042: 'BLEND',\n\t\t3089: 'SCISSOR_TEST',\n\t\t32823: 'POLYGON_OFFSET_FILL',\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\tvar MIME_TYPE_FORMATS = {\n\t\t'image/png': THREE.RGBAFormat,\n\t\t'image/jpeg': THREE.RGBFormat\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\tvar defaultMaterial;\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial() {\n\n\t\tdefaultMaterial = defaultMaterial || new THREE.MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: THREE.FrontSide\n\t\t} );\n\n\t\treturn defaultMaterial;\n\n\t}\n\n\tfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\n\n\t\t// Add unknown glTF extensions to an object's userData.\n\n\t\tfor ( var name in objectDef.extensions ) {\n\n\t\t\tif ( knownExtensions[ name ] === undefined ) {\n\n\t\t\t\tobject.userData.gltfExtensions = object.userData.gltfExtensions || {};\n\t\t\t\tobject.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */\n\tfunction assignExtrasToUserData( object, gltfDef ) {\n\n\t\tif ( gltfDef.extras !== undefined ) {\n\n\t\t\tif ( typeof gltfDef.extras === 'object' ) {\n\n\t\t\t\tobject.userData = gltfDef.extras;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addMorphTargets( geometry, targets, parser ) {\n\n\t\tvar hasMorphPosition = false;\n\t\tvar hasMorphNormal = false;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( target.POSITION !== undefined ) hasMorphPosition = true;\n\t\t\tif ( target.NORMAL !== undefined ) hasMorphNormal = true;\n\n\t\t\tif ( hasMorphPosition && hasMorphNormal ) break;\n\n\t\t}\n\n\t\tif ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\n\n\t\tvar pendingPositionAccessors = [];\n\t\tvar pendingNormalAccessors = [];\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\n\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\tvar pendingAccessor = target.POSITION !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.POSITION )\n\t\t\t\t\t: geometry.attributes.position;\n\n\t\t\t\tpendingPositionAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\tvar pendingAccessor = target.NORMAL !== undefined\n\t\t\t\t\t? parser.getDependency( 'accessor', target.NORMAL )\n\t\t\t\t\t: geometry.attributes.normal;\n\n\t\t\t\tpendingNormalAccessors.push( pendingAccessor );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( [\n\t\t\tPromise.all( pendingPositionAccessors ),\n\t\t\tPromise.all( pendingNormalAccessors )\n\t\t] ).then( function ( accessors ) {\n\n\t\t\tvar morphPositions = accessors[ 0 ];\n\t\t\tvar morphNormals = accessors[ 1 ];\n\n\t\t\t// Clone morph target accessors before modifying them.\n\n\t\t\tfor ( var i = 0, il = morphPositions.length; i < il; i ++ ) {\n\n\t\t\t\tif ( geometry.attributes.position === morphPositions[ i ] ) continue;\n\n\t\t\t\tmorphPositions[ i ] = cloneBufferAttribute( morphPositions[ i ] );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( geometry.attributes.normal === morphNormals[ i ] ) continue;\n\n\t\t\t\tmorphNormals[ i ] = cloneBufferAttribute( morphNormals[ i ] );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\t\tvar target = targets[ i ];\n\t\t\t\tvar attributeName = 'morphTarget' + i;\n\n\t\t\t\tif ( hasMorphPosition ) {\n\n\t\t\t\t\t// Three.js morph position is absolute value. The formula is\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * ( morphPosition0 - basePosition )\n\t\t\t\t\t//     + weight1 * ( morphPosition1 - basePosition )\n\t\t\t\t\t//     ...\n\t\t\t\t\t// while the glTF one is relative\n\t\t\t\t\t//   basePosition\n\t\t\t\t\t//     + weight0 * glTFmorphPosition0\n\t\t\t\t\t//     + weight1 * glTFmorphPosition1\n\t\t\t\t\t//     ...\n\t\t\t\t\t// then we need to convert from relative to absolute here.\n\n\t\t\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t\t\tvar positionAttribute = morphPositions[ i ];\n\t\t\t\t\t\tpositionAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tpositionAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\n\t\t\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasMorphNormal ) {\n\n\t\t\t\t\t// see target.POSITION's comment\n\n\t\t\t\t\tif ( target.NORMAL !== undefined ) {\n\n\t\t\t\t\t\tvar normalAttribute = morphNormals[ i ];\n\t\t\t\t\t\tnormalAttribute.name = attributeName;\n\n\t\t\t\t\t\tvar normal = geometry.attributes.normal;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tnormalAttribute.setXYZ(\n\t\t\t\t\t\t\t\tj,\n\t\t\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\n\t\t\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\n\t\t\tif ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\n\n\t\t\treturn geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */\n\tfunction updateMorphTargets( mesh, meshDef ) {\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tvar targetNames = meshDef.extras.targetNames;\n\n\t\t\tif ( mesh.morphTargetInfluences.length === targetNames.length ) {\n\n\t\t\t\tmesh.morphTargetDictionary = {};\n\n\t\t\t\tfor ( var i = 0, il = targetNames.length; i < il; i ++ ) {\n\n\t\t\t\t\tmesh.morphTargetDictionary[ targetNames[ i ] ] = i;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\tfunction isObjectEqual( a, b ) {\n\n\t\tif ( Object.keys( a ).length !== Object.keys( b ).length ) return false;\n\n\t\tfor ( var key in a ) {\n\n\t\t\tif ( a[ key ] !== b[ key ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction createPrimitiveKey( primitiveDef ) {\n\n\t\tvar dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\n\t\tvar geometryKey;\n\n\t\tif ( dracoExtension ) {\n\n\t\t\tgeometryKey = 'draco:' + dracoExtension.bufferView\n\t\t\t\t+ ':' + dracoExtension.indices\n\t\t\t\t+ ':' + createAttributesKey( dracoExtension.attributes );\n\n\t\t} else {\n\n\t\t\tgeometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\n\n\t\t}\n\n\t\treturn geometryKey;\n\n\t}\n\n\tfunction createAttributesKey( attributes ) {\n\n\t\tvar attributesKey = '';\n\n\t\tvar keys = Object.keys( attributes ).sort();\n\n\t\tfor ( var i = 0, il = keys.length; i < il; i ++ ) {\n\n\t\t\tattributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\n\n\t\t}\n\n\t\treturn attributesKey;\n\n\t}\n\n\tfunction cloneBufferAttribute( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tvar count = attribute.count;\n\t\t\tvar itemSize = attribute.itemSize;\n\t\t\tvar array = attribute.array.slice( 0, count * itemSize );\n\n\t\t\tfor ( var i = 0, j = 0; i < count; ++ i ) {\n\n\t\t\t\tarray[ j ++ ] = attribute.getX( i );\n\t\t\t\tif ( itemSize >= 2 ) array[ j ++ ] = attribute.getY( i );\n\t\t\t\tif ( itemSize >= 3 ) array[ j ++ ] = attribute.getZ( i );\n\t\t\t\tif ( itemSize >= 4 ) array[ j ++ ] = attribute.getW( i );\n\n\t\t\t}\n\n\t\t\treturn new THREE.BufferAttribute( array, itemSize, attribute.normalized );\n\n\t\t}\n\n\t\treturn attribute.clone();\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = {};\n\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\tPromise.all( [\n\n\t\t\tthis.getDependencies( 'scene' ),\n\t\t\tthis.getDependencies( 'animation' ),\n\t\t\tthis.getDependencies( 'camera' ),\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar result = {\n\t\t\t\tscene: dependencies[ 0 ][ json.scene || 0 ],\n\t\t\t\tscenes: dependencies[ 0 ],\n\t\t\t\tanimations: dependencies[ 1 ],\n\t\t\t\tcameras: dependencies[ 2 ],\n\t\t\t\tasset: json.asset,\n\t\t\t\tparser: parser,\n\t\t\t\tuserData: {}\n\t\t\t};\n\n\t\t\taddUnknownExtensionsToUserData( extensions, result, json );\n\n\t\t\tonLoad( result );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'scene':\n\t\t\t\t\tdependency = this.loadScene( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'node':\n\t\t\t\t\tdependency = this.loadNode( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'mesh':\n\t\t\t\t\tdependency = this.loadMesh( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'accessor':\n\t\t\t\t\tdependency = this.loadAccessor( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bufferView':\n\t\t\t\t\tdependency = this.loadBufferView( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'buffer':\n\t\t\t\t\tdependency = this.loadBuffer( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'material':\n\t\t\t\t\tdependency = this.loadMaterial( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'texture':\n\t\t\t\t\tdependency = this.loadTexture( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'skin':\n\t\t\t\t\tdependency = this.loadSkin( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'animation':\n\t\t\t\t\tdependency = this.loadAnimation( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'camera':\n\t\t\t\t\tdependency = this.loadCamera( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'light':\n\t\t\t\t\tdependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error( 'Unknown type: ' + type );\n\n\t\t\t}\n\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn Promise.resolve( null );\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tarray = new TypedArray( bufferView );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\n\t\tvar textureExtensions = textureDef.extensions || {};\n\n\t\tvar source;\n\n\t\tif ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\n\n\t\t\tsource = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\n\n\t\t} else {\n\n\t\t\tsource = json.images[ textureDef.source ];\n\n\t\t}\n\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI );\n\n\t\t\tif ( ! loader ) {\n\n\t\t\t\tloader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\n\t\t\t\t\t? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\n\t\t\t\t\t: textureLoader;\n\n\t\t\t}\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\t// Ignore unknown mime types, like DDS files.\n\t\t\tif ( source.mimeType in MIME_TYPE_FORMATS ) {\n\n\t\t\t\ttexture.format = MIME_TYPE_FORMATS[ source.mimeType ];\n\n\t\t\t}\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\n\n\t\tvar parser = this;\n\n\t\treturn this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\n\n\t\t\tswitch ( mapName ) {\n\n\t\t\t\tcase 'aoMap':\n\t\t\t\tcase 'emissiveMap':\n\t\t\t\tcase 'metalnessMap':\n\t\t\t\tcase 'normalMap':\n\t\t\t\tcase 'roughnessMap':\n\t\t\t\t\ttexture.format = THREE.RGBFormat;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\n\n\t\t\t\tvar transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\n\n\t\t\t\tif ( transform ) {\n\n\t\t\t\t\ttexture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmaterialParams[ mapName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Assigns final material to a Mesh, Line, or Points instance. The instance\n\t * already has a material (generated from the glTF material options alone)\n\t * but reuse of the same glTF material may require multiple threejs materials\n\t * to accomodate different primitive types, defines, etc. New materials will\n\t * be created if necessary, and reused from a cache.\n\t * @param  {THREE.Object3D} mesh Mesh, Line, or Points instance.\n\t */\n\tGLTFParser.prototype.assignFinalMaterial = function ( mesh ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\t\tvar extensions = this.extensions;\n\n\t\tvar useVertexTangents = geometry.attributes.tangent !== undefined;\n\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\tvar useSkinning = mesh.isSkinnedMesh === true;\n\t\tvar useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\n\t\tvar useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\n\n\t\tif ( mesh.isPoints ) {\n\n\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\tvar pointsMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\tpointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\n\n\t\t\t\tthis.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = pointsMaterial;\n\n\t\t} else if ( mesh.isLine ) {\n\n\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\tvar lineMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\tlineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\n\n\t\t\t\tthis.cache.add( cacheKey, lineMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = lineMaterial;\n\n\t\t}\n\n\t\t// Clone the material if it will be modified\n\t\tif ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\tvar cacheKey = 'ClonedMaterial:' + material.uuid + ':';\n\n\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\n\t\t\tif ( useSkinning ) cacheKey += 'skinning:';\n\t\t\tif ( useVertexTangents ) cacheKey += 'vertex-tangents:';\n\t\t\tif ( useVertexColors ) cacheKey += 'vertex-colors:';\n\t\t\tif ( useFlatShading ) cacheKey += 'flat-shading:';\n\t\t\tif ( useMorphTargets ) cacheKey += 'morph-targets:';\n\t\t\tif ( useMorphNormals ) cacheKey += 'morph-normals:';\n\n\t\t\tvar cachedMaterial = this.cache.get( cacheKey );\n\n\t\t\tif ( ! cachedMaterial ) {\n\n\t\t\t\tcachedMaterial = material.isGLTFSpecularGlossinessMaterial\n\t\t\t\t\t? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\n\t\t\t\t\t: material.clone();\n\n\t\t\t\tif ( useSkinning ) cachedMaterial.skinning = true;\n\t\t\t\tif ( useVertexTangents ) cachedMaterial.vertexTangents = true;\n\t\t\t\tif ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\n\t\t\t\tif ( useFlatShading ) cachedMaterial.flatShading = true;\n\t\t\t\tif ( useMorphTargets ) cachedMaterial.morphTargets = true;\n\t\t\t\tif ( useMorphNormals ) cachedMaterial.morphNormals = true;\n\n\t\t\t\tthis.cache.add( cacheKey, cachedMaterial );\n\n\t\t\t}\n\n\t\t\tmaterial = cachedMaterial;\n\n\t\t}\n\n\t\t// workarounds for mesh and geometry\n\n\t\tif ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\n\n\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\n\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t}\n\n\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\n\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t}\n\n\t\tmesh.material = material;\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType( materialDef );\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType( materialDef );\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness || {};\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tassignExtrasToUserData( material, materialDef );\n\n\t\t\tif ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */\n\tfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tvar pending = [];\n\n\t\tfunction assignAttributeAccessor( accessorIndex, attributeName ) {\n\n\t\t\treturn parser.getDependency( 'accessor', accessorIndex )\n\t\t\t\t.then( function ( accessor ) {\n\n\t\t\t\t\tgeometry.addAttribute( attributeName, accessor );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ] || gltfAttributeName.toLowerCase();\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tpending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && ! geometry.index ) {\n\n\t\t\tvar accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\n\n\t\t\t\tgeometry.setIndex( accessor );\n\n\t\t\t} );\n\n\t\t\tpending.push( accessor );\n\n\t\t}\n\n\t\tassignExtrasToUserData( geometry, primitiveDef );\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\treturn primitiveDef.targets !== undefined\n\t\t\t\t? addMorphTargets( geometry, primitiveDef.targets, parser )\n\t\t\t\t: geometry;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\tfunction createDracoPrimitive( primitive ) {\n\n\t\t\treturn extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\treturn addPrimitiveAttributes( geometry, primitive, parser );\n\n\t\t\t\t} );\n\n\t\t}\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar primitive = primitives[ i ];\n\t\t\tvar cacheKey = createPrimitiveKey( primitive );\n\n\t\t\t// See if we've already created this geometry\n\t\t\tvar cached = cache[ cacheKey ];\n\n\t\t\tif ( cached ) {\n\n\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\tpending.push( cached.promise );\n\n\t\t\t} else {\n\n\t\t\t\tvar geometryPromise;\n\n\t\t\t\tif ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tgeometryPromise = createDracoPrimitive( primitive );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\n\n\t\t\t\t}\n\n\t\t\t\t// Cache this geometry\n\t\t\t\tcache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\n\n\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\tvar meshDef = json.meshes[ meshIndex ];\n\t\tvar primitives = meshDef.primitives;\n\n\t\tvar pending = [];\n\n\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\tvar material = primitives[ i ].material === undefined\n\t\t\t\t? createDefaultMaterial()\n\t\t\t\t: this.getDependency( 'material', primitives[ i ].material );\n\n\t\t\tpending.push( material );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function ( originalMaterials ) {\n\n\t\t\treturn parser.loadGeometries( primitives ).then( function ( geometries ) {\n\n\t\t\t\tvar meshes = [];\n\n\t\t\t\tfor ( var i = 0, il = geometries.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar geometry = geometries[ i ];\n\t\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t\t// 1. create Mesh\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tvar material = originalMaterials[ i ];\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\t// .isSkinnedMesh isn't in glTF spec. See .markDefs()\n\t\t\t\t\t\tmesh = meshDef.isSkinnedMesh === true\n\t\t\t\t\t\t\t? new THREE.SkinnedMesh( geometry, material )\n\t\t\t\t\t\t\t: new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\tif ( mesh.isSkinnedMesh === true ) mesh.normalizeSkinWeights(); // #15319\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\n\n\t\t\t\t\t\tupdateMorphTargets( mesh, meshDef );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( geometries.length > 1 ) mesh.name += '_' + i;\n\n\t\t\t\t\tassignExtrasToUserData( mesh, meshDef );\n\n\t\t\t\t\tparser.assignFinalMaterial( mesh );\n\n\t\t\t\t\tmeshes.push( mesh );\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshes.length === 1 ) {\n\n\t\t\t\t\treturn meshes[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tvar group = new THREE.Group();\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tgroup.add( meshes[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\n\t\tassignExtrasToUserData( camera, cameraDef );\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = json.animations[ animationIndex ];\n\n\t\tvar pendingNodes = [];\n\t\tvar pendingInputAccessors = [];\n\t\tvar pendingOutputAccessors = [];\n\t\tvar pendingSamplers = [];\n\t\tvar pendingTargets = [];\n\n\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\t\t\tvar target = channel.target;\n\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\tpendingNodes.push( this.getDependency( 'node', name ) );\n\t\t\tpendingInputAccessors.push( this.getDependency( 'accessor', input ) );\n\t\t\tpendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\n\t\t\tpendingSamplers.push( sampler );\n\t\t\tpendingTargets.push( target );\n\n\t\t}\n\n\t\treturn Promise.all( [\n\n\t\t\tPromise.all( pendingNodes ),\n\t\t\tPromise.all( pendingInputAccessors ),\n\t\t\tPromise.all( pendingOutputAccessors ),\n\t\t\tPromise.all( pendingSamplers ),\n\t\t\tPromise.all( pendingTargets )\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar nodes = dependencies[ 0 ];\n\t\t\tvar inputAccessors = dependencies[ 1 ];\n\t\t\tvar outputAccessors = dependencies[ 2 ];\n\t\t\tvar samplers = dependencies[ 3 ];\n\t\t\tvar targets = dependencies[ 4 ];\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = nodes.length; i < il; i ++ ) {\n\n\t\t\t\tvar node = nodes[ i ];\n\t\t\t\tvar inputAccessor = inputAccessors[ i ];\n\t\t\t\tvar outputAccessor = outputAccessors[ i ];\n\t\t\t\tvar sampler = samplers[ i ];\n\t\t\t\tvar target = targets[ i ];\n\n\t\t\t\tif ( node === undefined ) continue;\n\n\t\t\t\tnode.updateMatrix();\n\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\tvar targetNames = [];\n\n\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t// Node may be a THREE.Group (glTF mesh with several primitives) or a THREE.Mesh.\n\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object.isMesh === true && object.morphTargetInfluences ) {\n\n\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\tinputAccessor.array,\n\t\t\t\t\t\toutputAccessor.array,\n\t\t\t\t\t\tinterpolation\n\t\t\t\t\t);\n\n\t\t\t\t\t// Override interpolation with custom factory method.\n\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// Mark as CUBICSPLINE. `track.getInterpolation()` doesn't support custom interpolants.\n\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar parser = this;\n\n\t\tvar meshReferences = json.meshReferences;\n\t\tvar meshUses = json.meshUses;\n\n\t\tvar nodeDef = json.nodes[ nodeIndex ];\n\n\t\treturn ( function () {\n\n\t\t\t// .isBone isn't in glTF spec. See .markDefs\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\treturn Promise.resolve( new THREE.Bone() );\n\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\n\n\t\t\t\t\tvar node;\n\n\t\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\t\tvar instanceNum = meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t\t\tnode = mesh.clone();\n\t\t\t\t\t\tnode.name += '_instance_' + instanceNum;\n\n\t\t\t\t\t\t// onBeforeRender copy for Specular-Glossiness\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t\tfor ( var i = 0, il = node.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].name += '_instance_' + instanceNum;\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tnode = mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if weights are provided on the node, override weights on the mesh.\n\t\t\t\t\tif ( nodeDef.weights !== undefined ) {\n\n\t\t\t\t\t\tnode.traverse( function ( o ) {\n\n\t\t\t\t\t\t\tif ( ! o.isMesh ) return;\n\n\t\t\t\t\t\t\tfor ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\to.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'camera', nodeDef.camera );\n\n\t\t\t} else if ( nodeDef.extensions\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\n\t\t\t\t&& nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\n\n\t\t\t\treturn parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light );\n\n\t\t\t} else {\n\n\t\t\t\treturn Promise.resolve( new THREE.Object3D() );\n\n\t\t\t}\n\n\t\t}() ).then( function ( node ) {\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tassignExtrasToUserData( node, nodeDef );\n\n\t\t\tif ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, parser ) {\n\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\treturn parser.getDependency( 'node', nodeId ).then( function ( node ) {\n\n\t\t\t\tif ( nodeDef.skin === undefined ) return node;\n\n\t\t\t\t// build skeleton here as well\n\n\t\t\t\tvar skinEntry;\n\n\t\t\t\treturn parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\n\n\t\t\t\t\tskinEntry = skin;\n\n\t\t\t\t\tvar pendingJoints = [];\n\n\t\t\t\t\tfor ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tpendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Promise.all( pendingJoints );\n\n\t\t\t\t} ).then( function ( jointNodes ) {\n\n\t\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\n\n\t\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar mesh = meshes[ i ];\n\n\t\t\t\t\t\tvar bones = [];\n\t\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar jointNode = jointNodes[ j ];\n\n\t\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn node;\n\n\t\t\t\t} );\n\n\t\t\t} ).then( function ( node ) {\n\n\t\t\t\t// build node hierachy\n\n\t\t\t\tparentObject.add( node );\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\t\tpending.push( buildNodeHierachy( child, node, json, parser ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\t\t\tvar parser = this;\n\n\t\t\tvar scene = new THREE.Scene();\n\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\tassignExtrasToUserData( scene, sceneDef );\n\n\t\t\tif ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\n\n\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\tpending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}