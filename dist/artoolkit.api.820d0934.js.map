{"version":3,"sources":["js/jsartoolkit5/artoolkit.api.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["ARController","width","height","camera","w","h","orientation","listeners","image","videoWidth","videoHeight","defaultMarkerWidth","patternMarkers","barcodeMarkers","transform_mat","Float32Array","canvas","document","createElement","ctx","getContext","self","cameraParam","ARCameraParam","_initialize","err","console","error","prototype","dispose","artoolkit","teardown","id","t","process","detectMarker","markerNum","getMarkerNum","k","o","inPrevious","inCurrent","i","j","visible","multiEachMarkerInfo","markerInfo","getMarker","markerType","UNKNOWN_MARKER","trackPatternMarkerId","idPatt","idMatrix","PATTERN_MARKER","dir","dirPatt","setMarkerInfoDir","trackBarcodeMarkerId","BARCODE_MARKER","dirMatrix","getTransMatSquareCont","markerWidth","matrix","getTransMatSquare","transMatToGLMat","dispatchEvent","name","target","data","index","type","marker","multiMarkerCount","getMultiMarkerCount","subMarkerCount","getMultiMarkerPatternCount","getTransMatMultiSquareRobust","marker_transform_mat","getMultiEachMarker","multiMarkerId","markerIndex","_bwpointer","debugDraw","obj","getMultiMarkerNum","addEventListener","callback","push","removeEventListener","indexOf","splice","event","length","call","debugSetup","body","appendChild","setDebugMode","getProcessingImage","loadMarker","markerURL","onSuccess","onError","addMarker","loadMultiMarker","addMultiMarker","markerUID","dst","set","previousMarkerTransform","getTransMatMultiSquare","transMat","glMat","scale","undefined","_copyImageToHeap","setMarkerInfoVertex","vertexData","cloneMarkerInfo","JSON","parse","stringify","getTransformationMatrix","getCameraMatrix","camera_mat","getMarkerTransformationMatrix","mode","getDebugMode","setLogLevel","getLogLevel","setProjectionNearPlane","value","getProjectionNearPlane","setProjectionFarPlane","getProjectionFarPlane","setThresholdMode","getThresholdMode","setThreshold","threshold","getThreshold","setPatternDetectionMode","getPatternDetectionMode","setMatrixCodeType","getMatrixCodeType","setLabelingMode","getLabelingMode","setPattRatio","pattRatio","getPattRatio","setImageProcMode","getImageProcMode","debugBuffer","Uint8ClampedArray","Module","HEAPU8","buffer","framesize","ImageData","putImageData","marker_num","_debugMarker","setup","params","frameMalloc","framepointer","dataHeap","Uint8Array","Float64Array","transform","setTimeout","onload","save","translate","rotate","Math","PI","drawImage","restore","imageData","getImageData","vertex","pos","strokeStyle","beginPath","moveTo","lineTo","stroke","arc","fillStyle","fill","getUserMedia","configuration","facing","facingMode","video","initProgress","readyToPlay","eventNames","play","paused","forEach","eventName","window","success","stream","src","URL","createObjectURL","constraints","mediaDevicesConstraints","max","maxWidth","min","minWidth","maxHeight","minHeight","navigator","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","hdConstraints","audio","mandatory","mediaDevices","then","MediaStreamTrack","getSources","sources","facingDir","exact","kind","sourceId","getUserMediaARController","cameraParamURL","arCameraParam","maxSize","maxARVideoSize","f","tmp","arController","onerror","_src","complete","load","loadCamera","Object","defineProperty","get","deleteCamera","FUNCTIONS","runWhenLoaded","n","m","match","marker_count","arId","url","filename","ajax","_addMarker","bytesToString","array","String","fromCharCode","apply","parseMultiFile","bytes","str","lines","split","files","state","markers","line","trim","startsWith","multi_marker_count","ok","markerID","_addMultiMarker","path","slice","join","map","file","ajaxDependencies","camera_count","writeCallback","_loadCamera","writeByteArrayToFS","writeStringToFS","string","byteArray","charCodeAt","FS","writeFile","encoding","oReq","XMLHttpRequest","open","responseType","arrayBuffer","response","send","next","pop","onRuntimeInitialized","OVERLAY_ID","OldModule","module","bundle","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","message","stack","overlay","createErrorOverlay","getElementById","remove","stackTrace","innerText","innerHTML","getParents","modules","parents","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"artoolkit.api.820d0934.js","sourceRoot":"../src","sourcesContent":[";(function() {\n\t'use strict';\n\n\t/**\n\t\tThe ARController is the main object for doing AR marker detection with JSARToolKit.\n\n\t\tTo use an ARController, you need to tell it the dimensions to use for the AR processing canvas and\n\t\tpass it an ARCameraParam to define the camera parameters to use when processing images.\n\t\tThe ARCameraParam defines the lens distortion and aspect ratio of the camera used.\n\t\tSee https://www.artoolworks.com/support/library/Calibrating_your_camera for more information about AR camera parameteters and how to make and use them.\n\n\t\tIf you pass an image as the first argument, the ARController uses that as the image to process,\n\t\tusing the dimensions of the image as AR processing canvas width and height. If the first argument\n\t\tto ARController is an image, the second argument is used as the camera param.\n\n\t\tThe camera parameters argument can be either an ARCameraParam or an URL to a camera definition file.\n\t\tIf the camera argument is an URL, it is loaded into a new ARCameraParam, and the ARController dispatches\n\t\ta 'load' event and calls the onload method if it is defined.\n\n\t \t@exports ARController\n\t \t@constructor\n\n\t\t@param {number} width The width of the images to process.\n\t\t@param {number} height The height of the images to process.\n\t\t@param {ARCameraParam | string} camera The ARCameraParam to use for image processing. If this is a string, the ARController treats it as an URL and tries to load it as a ARCameraParam definition file, calling ARController#onload on success.\n\t*/\n\tvar ARController = function(width, height, camera) {\n\t\tvar w = width, h = height;\n\n\t\tthis.orientation = 'landscape';\n\n\t\tthis.listeners = {};\n\n\t\tif (typeof width !== 'number') {\n\t\t\tvar image = width;\n\t\t\tcamera = height;\n\t\t\tw = image.videoWidth || image.width;\n\t\t\th = image.videoHeight || image.height;\n\t\t\tthis.image = image;\n\t\t}\n\n\t\tthis.defaultMarkerWidth = 1;\n\t\tthis.patternMarkers = {};\n\t\tthis.barcodeMarkers = {};\n\t\tthis.transform_mat = new Float32Array(16);\n\n\t\tthis.canvas = document.createElement('canvas');\n\t\tthis.canvas.width = w;\n\t\tthis.canvas.height = h;\n\t\tthis.ctx = this.canvas.getContext('2d');\n\n\t\tthis.videoWidth = w;\n\t\tthis.videoHeight = h;\n\n\t\tif (typeof camera === 'string') {\n\n\t\t\tvar self = this;\n\t\t\tthis.cameraParam = new ARCameraParam(camera, function() {\n\t\t\t\tself._initialize();\n\t\t\t}, function(err) {\n\t\t\t\tconsole.error(\"ARController: Failed to load ARCameraParam\", err);\n\t\t\t});\n\n\t\t} else {\n\n\t\t\tthis.cameraParam = camera;\n\t\t\tthis._initialize();\n\n\t\t}\n\t};\n\n\t/**\n\t\tDestroys the ARController instance and frees all associated resources.\n\t\tAfter calling dispose, the ARController can't be used any longer. Make a new one if you need one.\n\n\t\tCalling this avoids leaking Emscripten memory, which may be important if you're using multiple ARControllers.\n\t*/\n\tARController.prototype.dispose = function() {\n\t\tartoolkit.teardown(this.id);\n\n\t\tfor (var t in this) {\n\t\t\tthis[t] = null;\n\t\t}\n\t};\n\n\t/**\n\t\tDetects markers in the given image. The process method dispatches marker detection events during its run.\n\n\t\tThe marker detection process proceeds by first dispatching a markerNum event that tells you how many\n\t\tmarkers were found in the image. Next, a getMarker event is dispatched for each found marker square.\n\t\tFinally, getMultiMarker is dispatched for every found multimarker, followed by getMultiMarkerSub events\n\t\tdispatched for each of the markers in the multimarker.\n\n\t\t\tarController.addEventListener('markerNum', function(ev) {\n\t\t\t\tconsole.log(\"Detected \" + ev.data + \" markers.\")\n\t\t\t});\n\t\t\tarController.addEventListener('getMarker', function(ev) {\n\t\t\t\tconsole.log(\"Detected marker with ids:\", ev.data.marker.id, ev.data.marker.idPatt, ev.data.marker.idMatrix);\n\t\t\t\tconsole.log(\"Marker data\", ev.data.marker);\n\t\t\t\tconsole.log(\"Marker transform matrix:\", [].join.call(ev.data.matrix, ', '));\n\t\t\t});\n\t\t\tarController.addEventListener('getMultiMarker', function(ev) {\n\t\t\t\tconsole.log(\"Detected multimarker with id:\", ev.data.multiMarkerId);\n\t\t\t});\n\t\t\tarController.addEventListener('getMultiMarkerSub', function(ev) {\n\t\t\t\tconsole.log(\"Submarker for \" + ev.data.multiMarkerId, ev.data.markerIndex, ev.data.marker);\n\t\t\t});\n\n\t\t\tarController.process(image);\n\n\n\t\tIf no image is given, defaults to this.image.\n\n\t\tIf the debugSetup has been called, draws debug markers on the debug canvas.\n\n\t\t@param {HTMLImageElement|HTMLVideoElement} [image] The image to process [optional].\n\t*/\n\tARController.prototype.process = function(image) {\n\t\tthis.detectMarker(image);\n\n\t\tvar markerNum = this.getMarkerNum();\n\t\tvar k,o;\n\t\tfor (k in this.patternMarkers) {\n\t\t\to = this.patternMarkers[k];\n\t\t\to.inPrevious = o.inCurrent;\n\t\t\to.inCurrent = false;\n\t\t}\n\t\tfor (k in this.barcodeMarkers) {\n\t\t\to = this.barcodeMarkers[k];\n\t\t\to.inPrevious = o.inCurrent;\n\t\t\to.inCurrent = false;\n\t\t}\n\n\t\tvar i, j, visible, multiEachMarkerInfo;\n\n\t\tfor (i=0; i<markerNum; i++) {\n\t\t\tvar markerInfo = this.getMarker(i);\n\n\t\t\tvar markerType = artoolkit.UNKNOWN_MARKER;\n\t\t\tvisible = this.trackPatternMarkerId(-1);\n\n\t\t\tif (markerInfo.idPatt > -1 && (markerInfo.id === markerInfo.idPatt || markerInfo.idMatrix === -1)) {\n\t\t\t\tvisible = this.trackPatternMarkerId(markerInfo.idPatt);\n\t\t\t\tmarkerType = artoolkit.PATTERN_MARKER;\n\n\t\t\t\tif (markerInfo.dir !== markerInfo.dirPatt) {\n\t\t\t\t\tthis.setMarkerInfoDir(i, markerInfo.dirPatt);\n\t\t\t\t}\n\n\t\t\t} else if (markerInfo.idMatrix > -1) {\n\t\t\t\tvisible = this.trackBarcodeMarkerId(markerInfo.idMatrix);\n\t\t\t\tmarkerType = artoolkit.BARCODE_MARKER;\n\n\t\t\t\tif (markerInfo.dir !== markerInfo.dirMatrix) {\n\t\t\t\t\tthis.setMarkerInfoDir(i, markerInfo.dirMatrix);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (markerType !== artoolkit.UNKNOWN_MARKER && visible.inPrevious) {\n\t\t\t\tthis.getTransMatSquareCont(i, visible.markerWidth, visible.matrix, visible.matrix);\n\t\t\t} else {\n\t\t\t\tthis.getTransMatSquare(i, visible.markerWidth, visible.matrix);\n\t\t\t}\n\n\t\t\tvisible.inCurrent = true;\n\t\t\tthis.transMatToGLMat(visible.matrix, this.transform_mat);\n\t\t\tthis.dispatchEvent({\n\t\t\t\tname: 'getMarker',\n\t\t\t\ttarget: this,\n\t\t\t\tdata: {\n\t\t\t\t\tindex: i,\n\t\t\t\t\ttype: markerType,\n\t\t\t\t\tmarker: markerInfo,\n\t\t\t\t\tmatrix: this.transform_mat\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar multiMarkerCount = this.getMultiMarkerCount();\n\t\tfor (i=0; i<multiMarkerCount; i++) {\n\t\t\tvar subMarkerCount = this.getMultiMarkerPatternCount(i);\n\t\t\tvisible = false;\n\n\t\t\tartoolkit.getTransMatMultiSquareRobust(this.id, i);\n\t\t\tthis.transMatToGLMat(this.marker_transform_mat, this.transform_mat);\n\n\t\t\tfor (j=0; j<subMarkerCount; j++) {\n\t\t\t\tmultiEachMarkerInfo = this.getMultiEachMarker(i, j);\n\t\t\t\tif (multiEachMarkerInfo.visible >= 0) {\n\t\t\t\t\tvisible = true;\n\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\tname: 'getMultiMarker',\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tmultiMarkerId: i,\n\t\t\t\t\t\t\tmatrix: this.transform_mat\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (visible) {\n\t\t\t\tfor (j=0; j<subMarkerCount; j++) {\n\t\t\t\t\tmultiEachMarkerInfo = this.getMultiEachMarker(i, j);\n\t\t\t\t\tthis.transMatToGLMat(this.marker_transform_mat, this.transform_mat);\n\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\tname: 'getMultiMarkerSub',\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tmultiMarkerId: i,\n\t\t\t\t\t\t\tmarkerIndex: j,\n\t\t\t\t\t\t\tmarker: multiEachMarkerInfo,\n\t\t\t\t\t\t\tmatrix: this.transform_mat\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._bwpointer) {\n\t\t\tthis.debugDraw();\n\t\t}\n\t};\n\n\t/**\n\t\tAdds the given pattern marker ID to the index of tracked IDs.\n\t\tSets the markerWidth for the pattern marker to markerWidth.\n\n\t\tUsed by process() to implement continuous tracking,\n\t\tkeeping track of the marker's transformation matrix\n\t\tand customizable marker widths.\n\n\t\t@param {number} id ID of the pattern marker to track.\n\t\t@param {number} [markerWidth] The width of the marker to track.\n\t\t@return {Object} The marker tracking object.\n\t*/\n\tARController.prototype.trackPatternMarkerId = function(id, markerWidth) {\n\t\tvar obj = this.patternMarkers[id];\n\t\tif (!obj) {\n\t\t\tthis.patternMarkers[id] = obj = {\n\t\t\t\tinPrevious: false,\n\t\t\t\tinCurrent: false,\n\t\t\t\tmatrix: new Float32Array(12),\n\t\t\t\tmarkerWidth: markerWidth || this.defaultMarkerWidth\n\t\t\t};\n\t\t}\n\t\tif (markerWidth) {\n\t\t\tobj.markerWidth = markerWidth;\n\t\t}\n\t\treturn obj;\n\t};\n\n\t/**\n\t\tAdds the given barcode marker ID to the index of tracked IDs.\n\t\tSets the markerWidth for the pattern marker to markerWidth.\n\n\t\tUsed by process() to implement continuous tracking,\n\t\tkeeping track of the marker's transformation matrix\n\t\tand customizable marker widths.\n\n\t\t@param {number} id ID of the barcode marker to track.\n\t\t@param {number} [markerWidth] The width of the marker to track.\n\t\t@return {Object} The marker tracking object.\n\t*/\n\tARController.prototype.trackBarcodeMarkerId = function(id, markerWidth) {\n\t\tvar obj = this.barcodeMarkers[id];\n\t\tif (!obj) {\n\t\t\tthis.barcodeMarkers[id] = obj = {\n\t\t\t\tinPrevious: false,\n\t\t\t\tinCurrent: false,\n\t\t\t\tmatrix: new Float32Array(12),\n\t\t\t\tmarkerWidth: markerWidth || this.defaultMarkerWidth\n\t\t\t};\n\t\t}\n\t\tif (markerWidth) {\n\t\t\tobj.markerWidth = markerWidth;\n\t\t}\n\t\treturn obj;\n\t};\n\n\t/**\n\t\tReturns the number of multimarkers registered on this ARController.\n\n\t\t@return {number} Number of multimarkers registered.\n\t*/\n\tARController.prototype.getMultiMarkerCount = function() {\n\t\treturn artoolkit.getMultiMarkerCount(this.id);\n\t};\n\n\t/**\n\t\tReturns the number of markers in the multimarker registered for the given multiMarkerId.\n\n\t\t@param {number} multiMarkerId The id number of the multimarker to access. Given by loadMultiMarker.\n\t\t@return {number} Number of markers in the multimarker. Negative value indicates failure to find the multimarker.\n\t*/\n\tARController.prototype.getMultiMarkerPatternCount = function(multiMarkerId) {\n\t\treturn artoolkit.getMultiMarkerNum(this.id, multiMarkerId);\n\t};\n\n\t/**\n\t\tAdd an event listener on this ARController for the named event, calling the callback function\n\t\twhenever that event is dispatched.\n\n\t\tPossible events are:\n\t\t  * getMarker - dispatched whenever process() finds a square marker\n\t\t  * getMultiMarker - dispatched whenever process() finds a visible registered multimarker\n\t\t  * getMultiMarkerSub - dispatched by process() for each marker in a visible multimarker\n\t\t  * load - dispatched when the ARController is ready to use (useful if passing in a camera URL in the constructor)\n\n\t\t@param {string} name Name of the event to listen to.\n\t\t@param {function} callback Callback function to call when an event with the given name is dispatched.\n\t*/\n\tARController.prototype.addEventListener = function(name, callback) {\n       if (!this.listeners[name]) {\n\t\t\tthis.listeners[name] = [];\n\t\t}\n\t\tthis.listeners[name].push(callback);\n\t};\n\n\t/**\n\t\tRemove an event listener from the named event.\n\n\t\t@param {string} name Name of the event to stop listening to.\n\t\t@param {function} callback Callback function to remove from the listeners of the named event.\n\t*/\n\tARController.prototype.removeEventListener = function(name, callback) {\n\t\tif (this.listeners[name]) {\n\t\t\tvar index = this.listeners[name].indexOf(callback);\n\t\t\tif (index > -1) {\n\t\t\t\tthis.listeners[name].splice(index, 1);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t\tDispatches the given event to all registered listeners on event.name.\n\n\t\t@param {Object} event Event to dispatch.\n\t*/\n\tARController.prototype.dispatchEvent = function(event) {\n\t\tvar listeners = this.listeners[event.name];\n\t\tif (listeners) {\n\t\t\tfor (var i=0; i<listeners.length; i++) {\n\t\t\t\tlisteners[i].call(this, event);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t\tSets up a debug canvas for the AR detection. Draws a red marker on top of each detected square in the image.\n\n\t\tThe debug canvas is added to document.body.\n\t*/\n\tARController.prototype.debugSetup = function() {\n\t\tdocument.body.appendChild(this.canvas);\n\t\tthis.setDebugMode(1);\n\t\tthis._bwpointer = this.getProcessingImage();\n\t};\n\n\t/**\n\t\tLoads a pattern marker from the given URL and calls the onSuccess callback with the UID of the marker.\n\n\t\tarController.loadMarker(markerURL, onSuccess, onError);\n\n\t\t@param {string} markerURL - The URL of the marker pattern file to load.\n\t\t@param {function} onSuccess - The success callback. Called with the id of the loaded marker on a successful load.\n\t\t@param {function} onError - The error callback. Called with the encountered error if the load fails.\n\t*/\n\tARController.prototype.loadMarker = function(markerURL, onSuccess, onError) {\n\t\treturn artoolkit.addMarker(this.id, markerURL, onSuccess, onError);\n\t};\n\n\t/**\n\t\tLoads a multimarker from the given URL and calls the onSuccess callback with the UID of the marker.\n\n\t\tarController.loadMultiMarker(markerURL, onSuccess, onError);\n\n\t\t@param {string} markerURL - The URL of the multimarker pattern file to load.\n\t\t@param {function} onSuccess - The success callback. Called with the id and the number of sub-markers of the loaded marker on a successful load.\n\t\t@param {function} onError - The error callback. Called with the encountered error if the load fails.\n\t*/\n\tARController.prototype.loadMultiMarker = function(markerURL, onSuccess, onError) {\n\t\treturn artoolkit.addMultiMarker(this.id, markerURL, onSuccess, onError);\n\t};\n\n\t/**\n\t * Populates the provided float array with the current transformation for the specified marker. After\n\t * a call to detectMarker, all marker information will be current. Marker transformations can then be\n\t * checked.\n\t * @param {number} markerUID\tThe unique identifier (UID) of the marker to query\n\t * @param {number} markerWidth\tThe width of the marker\n\t * @param {Float64Array} dst\tThe float array to populate with the 3x4 marker transformation matrix\n\t * @return\t{Float64Array} The dst array.\n\t */\n\tARController.prototype.getTransMatSquare = function(markerUID, markerWidth, dst) {\n\t\tartoolkit.getTransMatSquare(this.id, markerUID, markerWidth);\n\t\tdst.set(this.marker_transform_mat);\n\t\treturn dst;\n\t};\n\n\t/**\n\t * Populates the provided float array with the current transformation for the specified marker, using\n\t * previousMarkerTransform as the previously detected transformation. After\n\t * a call to detectMarker, all marker information will be current. Marker transformations can then be\n\t * checked.\n\t * @param {number} markerUID\tThe unique identifier (UID) of the marker to query\n\t * @param {number} markerWidth\tThe width of the marker\n\t * @param {Float64Array} previousMarkerTransform\tThe float array to use as the previous 3x4 marker transformation matrix\n\t * @param {Float64Array} dst\tThe float array to populate with the 3x4 marker transformation matrix\n\t * @return\t{Float64Array} The dst array.\n\t */\n\tARController.prototype.getTransMatSquareCont = function(markerUID, markerWidth, previousMarkerTransform, dst) {\n\t\tthis.marker_transform_mat.set(previousMarkerTransform);\n\t\tartoolkit.getTransMatSquareCont(this.id, markerUID, markerWidth);\n\t\tdst.set(this.marker_transform_mat);\n\t\treturn dst;\n\t};\n\n\t/**\n\t * Populates the provided float array with the current transformation for the specified multimarker. After\n\t * a call to detectMarker, all marker information will be current. Marker transformations can then be\n\t * checked.\n\t *\n\t * @param {number} markerUID\tThe unique identifier (UID) of the marker to query\n\t * @param {Float64Array} dst\tThe float array to populate with the 3x4 marker transformation matrix\n\t * @return\t{Float64Array} The dst array.\n\t */\n\tARController.prototype.getTransMatMultiSquare = function(markerUID, dst) {\n\t\tartoolkit.getTransMatMultiSquare(this.id, markerUID);\n\t\tdst.set(this.marker_transform_mat);\n\t\treturn dst;\n\t};\n\n\t/**\n\t * Populates the provided float array with the current robust transformation for the specified multimarker. After\n\t * a call to detectMarker, all marker information will be current. Marker transformations can then be\n\t * checked.\n\t * @param {number} markerUID\tThe unique identifier (UID) of the marker to query\n\t * @param {Float64Array} dst\tThe float array to populate with the 3x4 marker transformation matrix\n\t * @return\t{Float64Array} The dst array.\n\t */\n\tARController.prototype.getTransMatMultiSquareRobust = function(markerUID, dst) {\n\t\tartoolkit.getTransMatMultiSquare(this.id, markerUID);\n\t\tdst.set(this.marker_transform_mat);\n\t\treturn dst;\n\t};\n\n\t/**\n\t\tConverts the given 3x4 marker transformation matrix in the 12-element transMat array\n\t\tinto a 4x4 WebGL matrix and writes the result into the 16-element glMat array.\n\n\t\tIf scale parameter is given, scales the transform of the glMat by the scale parameter.\n\n\t\t@param {Float64Array} transMat The 3x4 marker transformation matrix.\n\t\t@param {Float64Array} glMat The 4x4 GL transformation matrix.\n\t\t@param {number} [scale] The scale for the transform.\n\t*/\n\tARController.prototype.transMatToGLMat = function(transMat, glMat, scale) {\n\t\tglMat[0 + 0*4] = transMat[0]; // R1C1\n\t\tglMat[0 + 1*4] = transMat[1]; // R1C2\n\t\tglMat[0 + 2*4] = transMat[2];\n\t\tglMat[0 + 3*4] = transMat[3];\n\t\tglMat[1 + 0*4] = transMat[4]; // R2\n\t\tglMat[1 + 1*4] = transMat[5];\n\t\tglMat[1 + 2*4] = transMat[6];\n\t\tglMat[1 + 3*4] = transMat[7];\n\t\tglMat[2 + 0*4] = transMat[8]; // R3\n\t\tglMat[2 + 1*4] = transMat[9];\n\t\tglMat[2 + 2*4] = transMat[10];\n\t\tglMat[2 + 3*4] = transMat[11];\n\t\tglMat[3 + 0*4] = 0.0;\n\t\tglMat[3 + 1*4] = 0.0;\n\t\tglMat[3 + 2*4] = 0.0;\n\t\tglMat[3 + 3*4] = 1.0;\n\t\tif (scale != undefined && scale !== 0.0) {\n\t\t\tglMat[12] *= scale;\n\t\t\tglMat[13] *= scale;\n\t\t\tglMat[14] *= scale;\n\t\t}\n\t\treturn glMat;\n\t};\n\n\t/**\n\t\tThis is the core ARToolKit marker detection function. It calls through to a set of\n\t\tinternal functions to perform the key marker detection steps of binarization and\n\t\tlabelling, contour extraction, and template matching and/or matrix code extraction.\n\n        Typically, the resulting set of detected markers is retrieved by calling arGetMarkerNum\n        to get the number of markers detected and arGetMarker to get an array of ARMarkerInfo\n        structures with information on each detected marker, followed by a step in which\n        detected markers are possibly examined for some measure of goodness of match (e.g. by\n        examining the match confidence value) and pose extraction.\n\n\t\t@param {HTMLImageElement|HTMLVideoElement} [image] to be processed to detect markers.\n\t\t@return {number}     0 if the function proceeded without error, or a value less than 0 in case of error.\n\t\t\tA result of 0 does not however, imply any markers were detected.\n\t*/\n\tARController.prototype.detectMarker = function(image) {\n\t\tif (this._copyImageToHeap(image)) {\n\t\t\treturn artoolkit.detectMarker(this.id);\n\t\t}\n\t\treturn -99;\n\t};\n\n\t/**\n\t\tGet the number of markers detected in a video frame.\n\n\t    @return {number}     The number of detected markers in the most recent image passed to arDetectMarker.\n    \t    Note that this is actually a count, not an index. A better name for this function would be\n        \tarGetDetectedMarkerCount, but the current name lives on for historical reasons.\n    */\n\tARController.prototype.getMarkerNum = function() {\n\t\treturn artoolkit.getMarkerNum(this.id);\n\t};\n\n\t/**\n\t\tGet the marker info struct for the given marker index in detected markers.\n\n\t\tCall this.detectMarker first, then use this.getMarkerNum to get the detected marker count.\n\n\t\tThe returned object is the global artoolkit.markerInfo object and will be overwritten\n\t\tby subsequent calls. If you need to hang on to it, create a copy using this.cloneMarkerInfo();\n\n\t\tReturns undefined if no marker was found.\n\n\t\tA markerIndex of -1 is used to access the global custom marker.\n\n\t\tThe fields of the markerInfo struct are:\n\t\t    @field      area Area in pixels of the largest connected region, comprising the marker border and regions connected to it. Note that this is\n\t\t        not the same as the actual onscreen area inside the marker border.\n\t\t\t@field      id If pattern detection mode is either pattern mode OR matrix but not both, will be marker ID (>= 0) if marker is valid, or -1 if invalid.\n\t\t\t@field      idPatt If pattern detection mode includes a pattern mode, will be marker ID (>= 0) if marker is valid, or -1 if invalid.\n\t\t    @field      idMatrix If pattern detection mode includes a matrix mode, will be marker ID (>= 0) if marker is valid, or -1 if invalid.\n\t\t\t@field      dir If pattern detection mode is either pattern mode OR matrix but not both, and id != -1, will be marker direction (range 0 to 3, inclusive).\n\t\t\t@field      dirPatt If pattern detection mode includes a pattern mode, and id != -1, will be marker direction (range 0 to 3, inclusive).\n\t\t\t@field      dirMatrix If pattern detection mode includes a matrix mode, and id != -1, will be marker direction (range 0 to 3, inclusive).\n\t\t\t@field      cf If pattern detection mode is either pattern mode OR matrix but not both, will be marker matching confidence (range 0.0 to 1.0 inclusive) if marker is valid, or -1.0 if marker is invalid.\n\t\t\t@field      cfPatt If pattern detection mode includes a pattern mode, will be marker matching confidence (range 0.0 to 1.0 inclusive) if marker is valid, or -1.0 if marker is invalid.\n\t\t\t@field      cfMatrix If pattern detection mode includes a matrix mode, will be marker matching confidence (range 0.0 to 1.0 inclusive) if marker is valid, or -1.0 if marker is invalid.\n\t\t\t@field      pos 2D position (in camera image coordinates, origin at top-left) of the centre of the marker.\n\t\t\t@field      line Line equations for the 4 sides of the marker.\n\t\t\t@field      vertex 2D positions (in camera image coordinates, origin at top-left) of the corners of the marker. vertex[(4 - dir)%4][] is the top-left corner of the marker. Other vertices proceed clockwise from this. These are idealised coordinates (i.e. the onscreen position aligns correctly with the undistorted camera image.)\n\n\n\t\t@param {number} markerIndex The index of the marker to query.\n\t\t@returns {Object} The markerInfo struct.\n\t*/\n\tARController.prototype.getMarker = function(markerIndex) {\n\t\tif (0 === artoolkit.getMarker(this.id, markerIndex)) {\n\t\t\treturn artoolkit.markerInfo;\n\t\t}\n\t};\n\n\t/**\n\t\tSet marker vertices to the given vertexData[4][2] array.\n\n\t\tSets the marker pos to the center of the vertices.\n\n\t\tUseful for building custom markers for getTransMatSquare.\n\n\t\tA markerIndex of -1 is used to access the global custom marker.\n\n\t\t@param {number} markerIndex The index of the marker to edit.\n\t \t@param {*} vertexData\n\t*/\n\tARController.prototype.setMarkerInfoVertex = function(markerIndex, vertexData) {\n\t\tfor (var i=0; i<vertexData.length; i++) {\n\t\t\tthis.marker_transform_mat[i*2+0] = vertexData[i][0];\n\t\t\tthis.marker_transform_mat[i*2+1] = vertexData[i][1];\n\t\t}\n\t\treturn artoolkit.setMarkerInfoVertex(this.id, markerIndex);\n\t};\n\n\t/**\n\t\tMakes a deep copy of the given marker info.\n\n\t\t@param {Object} markerInfo The marker info object to copy.\n\t\t@return {Object} The new copy of the marker info.\n\t*/\n\tARController.prototype.cloneMarkerInfo = function(markerInfo) {\n\t\treturn JSON.parse(JSON.stringify(markerInfo));\n\t};\n\n\t/**\n\t\tGet the marker info struct for the given marker index in detected markers.\n\n\t\tCall this.detectMarker first, then use this.getMarkerNum to get the detected marker count.\n\n\t\tThe returned object is the global artoolkit.markerInfo object and will be overwritten\n\t\tby subsequent calls. If you need to hang on to it, create a copy using this.cloneMarkerInfo();\n\n\t\tReturns undefined if no marker was found.\n\n\t\t@field {number} pattId The index of the marker.\n\t\t@field {number} pattType The type of the marker. Either AR_MULTI_PATTERN_TYPE_TEMPLATE or AR_MULTI_PATTERN_TYPE_MATRIX.\n\t\t@field {number} visible 0 or larger if the marker is visible\n\t\t@field {number} width The width of the marker.\n\n\t\t@param {number} multiMarkerId The multimarker to query.\n\t\t@param {number} markerIndex The index of the marker to query.\n\t\t@returns {Object} The markerInfo struct.\n\t*/\n\tARController.prototype.getMultiEachMarker = function(multiMarkerId, markerIndex) {\n\t\tif (0 === artoolkit.getMultiEachMarker(this.id, multiMarkerId, markerIndex)) {\n\t\t\treturn artoolkit.multiEachMarkerInfo;\n\t\t}\n\t};\n\n\n\t/**\n\t\tReturns the 16-element WebGL transformation matrix used by ARController.process to\n\t\tpass marker WebGL matrices to event listeners.\n\n\t\tUnique to each ARController.\n\n\t\t@return {Float64Array} The 16-element WebGL transformation matrix used by the ARController.\n\t*/\n\tARController.prototype.getTransformationMatrix = function() {\n\t\treturn this.transform_mat;\n\t};\n\n\t/**\n\t * Returns the projection matrix computed from camera parameters for the ARController.\n\t *\n\t * @return {Float64Array} The 16-element WebGL camera matrix for the ARController camera parameters.\n\t */\n\tARController.prototype.getCameraMatrix = function() {\n\t\treturn this.camera_mat;\n\t};\n\n\t/**\n\t\tReturns the shared ARToolKit 3x4 marker transformation matrix, used for passing and receiving\n\t\tmarker transforms to/from the Emscripten side.\n\n\t\t@return {Float64Array} The 12-element 3x4 row-major marker transformation matrix used by ARToolKit.\n\t*/\n\tARController.prototype.getMarkerTransformationMatrix = function() {\n\t\treturn this.marker_transform_mat;\n\t};\n\n\n\t/* Setter / Getter Proxies */\n\n\t/**\n\t * Enables or disables debug mode in the tracker. When enabled, a black and white debug\n\t * image is generated during marker detection. The debug image is useful for visualising\n\t * the binarization process and choosing a threshold value.\n\t * @param {boolean} mode\t\ttrue to enable debug mode, false to disable debug mode\n\t * @see\t\t\t\tgetDebugMode()\n\t */\n\tARController.prototype.setDebugMode = function(mode) {\n\t\treturn artoolkit.setDebugMode(this.id, mode);\n\t};\n\n\t/**\n\t * Returns whether debug mode is currently enabled.\n\t * @return {boolean}\ttrue when debug mode is enabled, false when debug mode is disabled\n\t * @see\t\t\t\t\tsetDebugMode()\n\t */\n\tARController.prototype.getDebugMode = function() {\n\t\treturn artoolkit.getDebugMode(this.id);\n\t};\n\n\t/**\n\t * Returns the Emscripten HEAP offset to the debug processing image used by ARToolKit.\n\t *\n\t * @return {number} HEAP offset to the debug processing image.\n\t */\n\tARController.prototype.getProcessingImage = function() {\n\t\treturn artoolkit.getProcessingImage(this.id);\n\t};\n\n\t/**\n\t * Sets the logging level to use by ARToolKit.\n\t *\n\t * //TODOC\n\t * @param mode\n\t */\n\tARController.prototype.setLogLevel = function(mode) {\n\t\treturn artoolkit.setLogLevel(mode);\n\t};\n\n\t/**\n\t * //TODOC\n\t * @returns {*}\n\t */\n\tARController.prototype.getLogLevel = function() {\n\t\treturn artoolkit.getLogLevel();\n\t};\n\n\t/**\n\t * //TODOC\n\t * @param markerIndex\n\t * @param dir\n\t * @returns {*}\n\t */\n\tARController.prototype.setMarkerInfoDir = function(markerIndex, dir) {\n\t\treturn artoolkit.setMarkerInfoDir(this.id, markerIndex, dir);\n\t};\n\n\t/**\n\t * //TODOC\n\t * @param value\n\t * @returns {*}\n\t */\n\tARController.prototype.setProjectionNearPlane = function(value) {\n\t\treturn artoolkit.setProjectionNearPlane(this.id, value);\n\t};\n\n\t/**\n\t * //TODOC\n\t * @returns {*}\n\t */\n\tARController.prototype.getProjectionNearPlane = function() {\n\t\treturn artoolkit.getProjectionNearPlane(this.id);\n\t};\n\n\t/**\n\t * //TODOC\n\t * @param value\n\t * @returns {*}\n\t */\n\tARController.prototype.setProjectionFarPlane = function(value) {\n\t\treturn artoolkit.setProjectionFarPlane(this.id, value);\n\t};\n\n\t/**\n\t * //TODOC\n\t * @returns {*}\n\t */\n\tARController.prototype.getProjectionFarPlane = function() {\n\t\treturn artoolkit.getProjectionFarPlane(this.id);\n\t};\n\n\n\t/**\n\t    Set the labeling threshold mode (auto/manual).\n\n\t    @param {number}\t\tmode An integer specifying the mode. One of:\n\t        AR_LABELING_THRESH_MODE_MANUAL,\n\t        AR_LABELING_THRESH_MODE_AUTO_MEDIAN,\n\t        AR_LABELING_THRESH_MODE_AUTO_OTSU,\n\t        AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE,\n\t        AR_LABELING_THRESH_MODE_AUTO_BRACKETING\n\t */\n \tARController.prototype.setThresholdMode = function(mode) {\n\t\treturn artoolkit.setThresholdMode(this.id, mode);\n\t};\n\n\t/**\n\t * Gets the current threshold mode used for image binarization.\n\t * @return\t{number}\t\tThe current threshold mode\n\t * @see\t\t\t\tgetVideoThresholdMode()\n\t */\n\tARController.prototype.getThresholdMode = function() {\n\t\treturn artoolkit.getThresholdMode(this.id);\n\t};\n\n\t/**\n    \tSet the labeling threshhold.\n\n        This function forces sets the threshold value.\n        The default value is AR_DEFAULT_LABELING_THRESH which is 100.\n\n        The current threshold mode is not affected by this call.\n        Typically, this function is used when labeling threshold mode\n        is AR_LABELING_THRESH_MODE_MANUAL.\n\n        The threshold value is not relevant if threshold mode is\n        AR_LABELING_THRESH_MODE_AUTO_ADAPTIVE.\n\n        Background: The labeling threshold is the value which\n\t\tthe AR library uses to differentiate between black and white\n\t\tportions of an ARToolKit marker. Since the actual brightness,\n\t\tcontrast, and gamma of incoming images can vary signficantly\n\t\tbetween different cameras and lighting conditions, this\n\t\tvalue typically needs to be adjusted dynamically to a\n\t\tsuitable midpoint between the observed values for black\n\t\tand white portions of the markers in the image.\n\n\t\t@param {number}     threshold An integer in the range [0,255] (inclusive).\n\t*/\n\tARController.prototype.setThreshold = function(threshold) {\n\t\treturn artoolkit.setThreshold(this.id, threshold);\n\t};\n\n\t/**\n\t    Get the current labeling threshold.\n\n\t\tThis function queries the current labeling threshold. For,\n\t\tAR_LABELING_THRESH_MODE_AUTO_MEDIAN, AR_LABELING_THRESH_MODE_AUTO_OTSU,\n\t\tand AR_LABELING_THRESH_MODE_AUTO_BRACKETING\n\t\tthe threshold value is only valid until the next auto-update.\n\n\t\tThe current threshold mode is not affected by this call.\n\n\t\tThe threshold value is not relevant if threshold mode is\n\t\tAR_LABELING_THRESH_MODE_AUTO_ADAPTIVE.\n\n\t    @return {number} The current threshold value.\n\t*/\n\tARController.prototype.getThreshold = function() {\n\t\treturn artoolkit.getThreshold(this.id);\n\t};\n\n\n\t/**\n\t\tSet the pattern detection mode\n\n\t\tThe pattern detection determines the method by which ARToolKit\n\t\tmatches detected squares in the video image to marker templates\n\t\tand/or IDs. ARToolKit v4.x can match against pictorial \"template\" markers,\n\t\twhose pattern files are created with the mk_patt utility, in either colour\n\t\tor mono, and additionally can match against 2D-barcode-type \"matrix\"\n\t\tmarkers, which have an embedded marker ID. Two different two-pass modes\n\t\tare also available, in which a matrix-detection pass is made first,\n\t\tfollowed by a template-matching pass.\n\n\t\t@param {number} mode\n\t\t\tOptions for this field are:\n\t\t\tAR_TEMPLATE_MATCHING_COLOR\n\t\t\tAR_TEMPLATE_MATCHING_MONO\n\t\t\tAR_MATRIX_CODE_DETECTION\n\t\t\tAR_TEMPLATE_MATCHING_COLOR_AND_MATRIX\n\t\t\tAR_TEMPLATE_MATCHING_MONO_AND_MATRIX\n\t\t\tThe default mode is AR_TEMPLATE_MATCHING_COLOR.\n\t*/\n\tARController.prototype.setPatternDetectionMode = function(mode) {\n\t\treturn artoolkit.setPatternDetectionMode(this.id, mode);\n\t};\n\n\t/**\n\t\tReturns the current pattern detection mode.\n\n\t\t@return {number} The current pattern detection mode.\n\t*/\n\tARController.prototype.getPatternDetectionMode = function() {\n\t\treturn artoolkit.getPatternDetectionMode(this.id);\n\t};\n\n\t/**\n\t\tSet the size and ECC algorithm to be used for matrix code (2D barcode) marker detection.\n\n\t\tWhen matrix-code (2D barcode) marker detection is enabled (see arSetPatternDetectionMode)\n\t\tthen the size of the barcode pattern and the type of error checking and correction (ECC)\n\t\twith which the markers were produced can be set via this function.\n\n\t\tThis setting is global to a given ARHandle; It is not possible to have two different matrix\n\t\tcode types in use at once.\n\n\t    @param      type The type of matrix code (2D barcode) in use. Options include:\n\t        AR_MATRIX_CODE_3x3\n\t        AR_MATRIX_CODE_3x3_HAMMING63\n\t        AR_MATRIX_CODE_3x3_PARITY65\n\t        AR_MATRIX_CODE_4x4\n\t        AR_MATRIX_CODE_4x4_BCH_13_9_3\n\t        AR_MATRIX_CODE_4x4_BCH_13_5_5\n\t        The default mode is AR_MATRIX_CODE_3x3.\n\t*/\n\tARController.prototype.setMatrixCodeType = function(type) {\n\t\treturn artoolkit.setMatrixCodeType(this.id, type);\n\t};\n\n\t/**\n\t\tReturns the current matrix code (2D barcode) marker detection type.\n\n\t\t@return {number} The current matrix code type.\n\t*/\n\tARController.prototype.getMatrixCodeType = function() {\n\t\treturn artoolkit.getMatrixCodeType(this.id);\n\t};\n\n\t/**\n\t\tSelect between detection of black markers and white markers.\n\n\t\tARToolKit's labelling algorithm can work with both black-bordered\n\t\tmarkers on a white background (AR_LABELING_BLACK_REGION) or\n\t\twhite-bordered markers on a black background (AR_LABELING_WHITE_REGION).\n\t\tThis function allows you to specify the type of markers to look for.\n\t\tNote that this does not affect the pattern-detection algorith\n\t\twhich works on the interior of the marker.\n\n\t\t@param {number}      mode\n\t\t\tOptions for this field are:\n\t\t\tAR_LABELING_WHITE_REGION\n\t\t\tAR_LABELING_BLACK_REGION\n\t\t\tThe default mode is AR_LABELING_BLACK_REGION.\n\t*/\n\tARController.prototype.setLabelingMode = function(mode) {\n\t\treturn artoolkit.setLabelingMode(this.id, mode);\n\t};\n\n\t/**\n\t\tEnquire whether detection is looking for black markers or white markers.\n\n\t    See discussion for setLabelingMode.\n\n\t    @result {number} The current labeling mode.\n\t*/\n\tARController.prototype.getLabelingMode = function() {\n\t\treturn artoolkit.getLabelingMode(this.id);\n\t};\n\n\t/**\n\t\tSet the width/height of the marker pattern space, as a proportion of marker width/height.\n\n\t    @param {number}\t\tpattRatio The the width/height of the marker pattern space, as a proportion of marker\n\t        width/height. To set the default, pass AR_PATT_RATIO.\n\t        If compatibility with ARToolKit verions 1.0 through 4.4 is required, this value\n\t        must be 0.5.\n\t */\n \tARController.prototype.setPattRatio = function(pattRatio) {\n\t\treturn artoolkit.setPattRatio(this.id, pattRatio);\n\t};\n\n\t/**\n\t\tReturns the current ratio of the marker pattern to the total marker size.\n\n\t\t@return {number} The current pattern ratio.\n\t*/\n\tARController.prototype.getPattRatio = function() {\n\t\treturn artoolkit.getPattRatio(this.id);\n\t};\n\n\t/**\n\t    Set the image processing mode.\n\n        When the image processing mode is AR_IMAGE_PROC_FRAME_IMAGE,\n        ARToolKit processes all pixels in each incoming image\n        to locate markers. When the mode is AR_IMAGE_PROC_FIELD_IMAGE,\n        ARToolKit processes pixels in only every second pixel row and\n        column. This is useful both for handling images from interlaced\n        video sources (where alternate lines are assembled from alternate\n        fields and thus have one field time-difference, resulting in a\n        \"comb\" effect) such as Digital Video cameras.\n        The effective reduction by 75% in the pixels processed also\n        has utility in accelerating tracking by effectively reducing\n        the image size to one quarter size, at the cost of pose accuraccy.\n\n\t    @param {number} mode\n\t\t\tOptions for this field are:\n\t\t\tAR_IMAGE_PROC_FRAME_IMAGE\n\t\t\tAR_IMAGE_PROC_FIELD_IMAGE\n\t\t\tThe default mode is AR_IMAGE_PROC_FRAME_IMAGE.\n\t*/\n\tARController.prototype.setImageProcMode = function(mode) {\n\t\treturn artoolkit.setImageProcMode(this.id, mode);\n\t};\n\n\t/**\n\t    Get the image processing mode.\n\n\t\tSee arSetImageProcMode() for a complete description.\n\n\t    @return {number} The current image processing mode.\n\t*/\n\tARController.prototype.getImageProcMode = function() {\n\t\treturn artoolkit.getImageProcMode(this.id);\n\t};\n\n\n\t/**\n\t\tDraw the black and white image and debug markers to the ARController canvas.\n\n\t\tSee setDebugMode.\n\t*/\n\tARController.prototype.debugDraw = function() {\n\t\tvar debugBuffer = new Uint8ClampedArray(Module.HEAPU8.buffer, this._bwpointer, this.framesize);\n\t\tvar id = new ImageData(debugBuffer, this.canvas.width, this.canvas.height);\n\t\tthis.ctx.putImageData(id, 0, 0);\n\n\t\tvar marker_num = this.getMarkerNum();\n\t\tfor (var i=0; i<marker_num; i++) {\n\t\t\tthis._debugMarker(this.getMarker(i));\n\t\t}\n\t};\n\n\n\t// private\n\n\t/**\n\t * //TODOC\n\t *\n\t * @private\n\t */\n\tARController.prototype._initialize = function() {\n\t\tthis.id = artoolkit.setup(this.canvas.width, this.canvas.height, this.cameraParam.id);\n\n\t\tvar params = artoolkit.frameMalloc;\n\t\tthis.framepointer = params.framepointer;\n\t\tthis.framesize = params.framesize;\n\n\t\tthis.dataHeap = new Uint8Array(Module.HEAPU8.buffer, this.framepointer, this.framesize);\n\n\t\tthis.camera_mat = new Float64Array(Module.HEAPU8.buffer, params.camera, 16);\n\t\tthis.marker_transform_mat = new Float64Array(Module.HEAPU8.buffer, params.transform, 12);\n\n\t\tthis.setProjectionNearPlane(0.1);\n\t\tthis.setProjectionFarPlane(1000);\n\n\t\tvar self = this;\n\t\tsetTimeout(function() {\n\t\t\tif (self.onload) {\n\t\t\t\tself.onload();\n\t\t\t}\n\t\t\tself.dispatchEvent({\n\t\t\t\tname: 'load',\n\t\t\t\ttarget: self\n\t\t\t});\n\t\t}, 1);\n\t};\n\n\t/**\n\t * //TODOC\n\t *\n\t * @param {HTMLImageElement|HTMLVideoElement} [image]\n\t * @returns {boolean}\n\t * @private\n\t */\n\tARController.prototype._copyImageToHeap = function(image) {\n\t\tif (!image) {\n\t\t\timage = this.image;\n\t\t}\n\n\t\tthis.ctx.save();\n\n\t\tif (this.orientation === 'portrait') {\n\t\t\tthis.ctx.translate(this.canvas.width, 0);\n\t\t\tthis.ctx.rotate(Math.PI/2);\n\t\t\tthis.ctx.drawImage(image, 0, 0, this.canvas.height, this.canvas.width); // draw video\n\t\t} else {\n\t\t\tthis.ctx.drawImage(image, 0, 0, this.canvas.width, this.canvas.height); // draw video\n\t\t}\n\n\t\tthis.ctx.restore();\n\n\t\tvar imageData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n\t\tvar data = imageData.data;\n\n\t\tif (this.dataHeap) {\n\t\t\tthis.dataHeap.set( data );\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * //TODOC\n\t *\n\t * @param marker\n\t * @private\n\t */\n\tARController.prototype._debugMarker = function(marker) {\n\t\tvar vertex, pos;\n\t\tvertex = marker.vertex;\n\t\tvar ctx = this.ctx;\n\t\tctx.strokeStyle = 'red';\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(vertex[0][0], vertex[0][1]);\n\t\tctx.lineTo(vertex[1][0], vertex[1][1]);\n\t\tctx.stroke();\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(vertex[2][0], vertex[2][1]);\n\t\tctx.lineTo(vertex[3][0], vertex[3][1]);\n\t\tctx.stroke();\n\n\t\tctx.strokeStyle = 'green';\n\t\tctx.beginPath();\n\t\tctx.lineTo(vertex[1][0], vertex[1][1]);\n\t\tctx.lineTo(vertex[2][0], vertex[2][1]);\n\t\tctx.stroke();\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(vertex[3][0], vertex[3][1]);\n\t\tctx.lineTo(vertex[0][0], vertex[0][1]);\n\t\tctx.stroke();\n\n\t\tpos = marker.pos;\n\t\tctx.beginPath();\n\t\tctx.arc(pos[0], pos[1], 8, 0, Math.PI * 2);\n\t\tctx.fillStyle = 'red';\n\t\tctx.fill()\n\t};\n\n\n\t// static\n\n\t/**\n\t\tARController.getUserMedia gets a device camera video feed and calls the given onSuccess callback with it.\n\n\t\tTries to start playing the video. Playing the video can fail on Chrome for Android,\n\t\tso ARController.getUserMedia adds user input event listeners to the window\n\t\tthat try to start playing the video. On success, the event listeners are removed.\n\n\t\tTo use ARController.getUserMedia, call it with an object with the onSuccess attribute set to a callback function.\n\n\t\t\tARController.getUserMedia({\n\t\t\t\tonSuccess: function(video) {\n\t\t\t\t\tconsole.log(\"Got video\", video);\n\t\t\t\t}\n\t\t\t});\n\n\t\tThe configuration object supports the following attributes:\n\n\t\t\t{\n\t\t\t\tonSuccess : function(video),\n\t\t\t\tonError : function(error),\n\n\t\t\t\twidth : number | {min: number, ideal: number, max: number},\n\t\t\t\theight : number | {min: number, ideal: number, max: number},\n\n\t\t\t\tfacingMode : 'environment' | 'user' | 'left' | 'right' | { exact: 'environment' | ... }\n\t\t\t}\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia for more information about the\n\t\twidth, height and facingMode attributes.\n\n\t\t@param {object} configuration The configuration object.\n\t\t@return {HTMLVideoElement} Returns the created video element.\n\t*/\n\tARController.getUserMedia = function(configuration) {\n\t\tvar facing = configuration.facingMode || 'environment';\n\n\t\tvar onSuccess = configuration.onSuccess;\n\t\tvar onError = configuration.onError || function(err) { console.error(\"ARController.getUserMedia\", err); };\n\n\t\tvar video = document.createElement('video');\n\n\t\tvar initProgress = function() {\n\t\t\tif (this.videoWidth !== 0) {\n\t\t\t\tonSuccess(video);\n\t\t\t}\n\t\t};\n\n\t\tvar readyToPlay = false;\n\t\tvar eventNames = [\n\t\t\t'touchstart', 'touchend', 'touchmove', 'touchcancel',\n\t\t\t'click', 'mousedown', 'mouseup', 'mousemove',\n\t\t\t'keydown', 'keyup', 'keypress', 'scroll'\n\t\t];\n\t\tvar play = function() {\n\t\t\tif (readyToPlay) {\n\t\t\t\tvideo.play();\n\t\t\t\tif (!video.paused) {\n\t\t\t\t\teventNames.forEach(function(eventName) {\n\t\t\t\t\t\twindow.removeEventListener(eventName, play, true);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\teventNames.forEach(function(eventName) {\n\t\t\twindow.addEventListener(eventName, play, true);\n\t\t});\n\n\t\tvar success = function(stream) {\n\t\t\tvideo.addEventListener('loadedmetadata', initProgress, false);\n\t\t\tvideo.src = window.URL.createObjectURL(stream);\n\t\t\treadyToPlay = true;\n\t\t\tplay(); // Try playing without user input, should work on non-Android Chrome\n\t\t};\n\n\t\tvar constraints = {};\n\t\tvar mediaDevicesConstraints = {};\n\t\tif (configuration.width) {\n\t\t\tmediaDevicesConstraints.width = configuration.width;\n\t\t\tif (typeof configuration.width === 'object') {\n\t\t\t\tif (configuration.width.max) {\n\t\t\t\t\tconstraints.maxWidth = configuration.width.max;\n\t\t\t\t}\n\t\t\t\tif (configuration.width.min) {\n\t\t\t\t\tconstraints.minWidth = configuration.width.max;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconstraints.maxWidth = configuration.width;\n\t\t\t}\n\t\t}\n\n\t\tif (configuration.height) {\n\t\t\tmediaDevicesConstraints.height = configuration.height;\n\t\t\tif (typeof configuration.height === 'object') {\n\t\t\t\tif (configuration.height.max) {\n\t\t\t\t\tconstraints.maxHeight = configuration.height.max;\n\t\t\t\t}\n\t\t\t\tif (configuration.height.min) {\n\t\t\t\t\tconstraints.minHeight = configuration.height.max;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconstraints.maxHeight = configuration.height;\n\t\t\t}\n\t\t}\n\n\t\tmediaDevicesConstraints.facingMode = facing;\n\n\t\tnavigator.getUserMedia  = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\t\tvar hdConstraints = {\n\t\t\taudio: false,\n\t\t\tvideo: {\n\t\t\t\tmandatory: constraints\n\t\t  \t}\n\t\t};\n\n\t\tif ( false ) {\n\t\t// if ( navigator.mediaDevices || window.MediaStreamTrack) {\n\t\t\tif (navigator.mediaDevices) {\n\t\t\t\tnavigator.mediaDevices.getUserMedia({\n\t\t\t\t\taudio: false,\n\t\t\t\t\tvideo: mediaDevicesConstraints\n\t\t\t\t}).then(success, onError);\n\t\t\t} else {\n\t\t\t\tMediaStreamTrack.getSources(function(sources) {\n\t\t\t\t\tvar facingDir = mediaDevicesConstraints.facingMode;\n\t\t\t\t\tif (facing && facing.exact) {\n\t\t\t\t\t\tfacingDir = facing.exact;\n\t\t\t\t\t}\n\t\t\t\t\tfor (var i=0; i<sources.length; i++) {\n\t\t\t\t\t\tif (sources[i].kind === 'video' && sources[i].facing === facingDir) {\n\t\t\t\t\t\t\thdConstraints.video.mandatory.sourceId = sources[i].id;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (facing && facing.exact && !hdConstraints.video.mandatory.sourceId) {\n\t\t\t\t\t\tonError('Failed to get camera facing the wanted direction');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (navigator.getUserMedia) {\n\t\t\t\t\t\t\tnavigator.getUserMedia(hdConstraints, success, onError);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tonError('navigator.getUserMedia is not supported on your browser');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (navigator.getUserMedia) {\n\t\t\t\tnavigator.getUserMedia(hdConstraints, success, onError);\n\t\t\t} else {\n\t\t\t\tonError('navigator.getUserMedia is not supported on your browser');\n\t\t\t}\n\t\t}\n\n\t\treturn video;\n\t};\n\n\t/**\n\t\tARController.getUserMediaARController gets an ARController for the device camera video feed and calls the\n\t\tgiven onSuccess callback with it.\n\n\t\tTo use ARController.getUserMediaARController, call it with an object with the cameraParam attribute set to\n\t\ta camera parameter file URL, and the onSuccess attribute set to a callback function.\n\n\t\t\tARController.getUserMediaARController({\n\t\t\t\tcameraParam: 'Data/camera_para.dat',\n\t\t\t\tonSuccess: function(arController, arCameraParam) {\n\t\t\t\t\tconsole.log(\"Got ARController\", arController);\n\t\t\t\t\tconsole.log(\"Got ARCameraParam\", arCameraParam);\n\t\t\t\t\tconsole.log(\"Got video\", arController.image);\n\t\t\t\t}\n\t\t\t});\n\n\t\tThe configuration object supports the following attributes:\n\n\t\t\t{\n\t\t\t\tonSuccess : function(ARController, ARCameraParam),\n\t\t\t\tonError : function(error),\n\n\t\t\t\tcameraParam: url, // URL to camera parameters definition file.\n\t\t\t\tmaxARVideoSize: number, // Maximum max(width, height) for the AR processing canvas.\n\n\t\t\t\twidth : number | {min: number, ideal: number, max: number},\n\t\t\t\theight : number | {min: number, ideal: number, max: number},\n\n\t\t\t\tfacingMode : 'environment' | 'user' | 'left' | 'right' | { exact: 'environment' | ... }\n\t\t\t}\n\n\t\tSee https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia for more information about the\n\t\twidth, height and facingMode attributes.\n\n\t\tThe orientation attribute of the returned ARController is set to \"portrait\" if the userMedia video has larger\n\t\theight than width. Otherwise it's set to \"landscape\". The videoWidth and videoHeight attributes of the arController\n\t\tare set to be always in landscape configuration so that width is larger than height.\n\n\t\t@param {object} configuration The configuration object.\n\t\t@return {HTMLVideoElement} Returns the created video element.\n\t*/\n\tARController.getUserMediaARController = function(configuration) {\n\t\tvar obj = {};\n\t\tfor (var i in configuration) {\n\t\t\tobj[i] = configuration[i];\n\t\t}\n\t\tvar onSuccess = configuration.onSuccess;\n\t\tvar cameraParamURL = configuration.cameraParam;\n\n\t\tobj.onSuccess = function() {\n\t\t\tnew ARCameraParam(cameraParamURL, function() {\n\t\t\t\tvar arCameraParam = this;\n\t\t\t\tvar maxSize = configuration.maxARVideoSize || Math.max(video.videoWidth, video.videoHeight);\n\t\t\t\tvar f = maxSize / Math.max(video.videoWidth, video.videoHeight);\n\t\t\t\tvar w = f * video.videoWidth;\n\t\t\t\tvar h = f * video.videoHeight;\n\t\t\t\tif (video.videoWidth < video.videoHeight) {\n\t\t\t\t\tvar tmp = w;\n\t\t\t\t\tw = h;\n\t\t\t\t\th = tmp;\n\t\t\t\t}\n\t\t\t\tvar arController = new ARController(w, h, arCameraParam);\n\t\t\t\tarController.image = video;\n\t\t\t\tif (video.videoWidth < video.videoHeight) {\n\t\t\t\t\tarController.orientation = 'portrait';\n\t\t\t\t\tarController.videoWidth = video.videoHeight;\n\t\t\t\t\tarController.videoHeight = video.videoWidth;\n\t\t\t\t} else {\n\t\t\t\t\tarController.orientation = 'landscape';\n\t\t\t\t\tarController.videoWidth = video.videoWidth;\n\t\t\t\t\tarController.videoHeight = video.videoHeight;\n\t\t\t\t}\n\t\t\t\tonSuccess(arController, arCameraParam);\n\t\t\t}, function(err) {\n\t\t\t\tconsole.error(\"ARController: Failed to load ARCameraParam\", err);\n\t\t\t});\n\t\t};\n\n\t\tvar video = this.getUserMedia(obj);\n\t\treturn video;\n\t};\n\n\n\t/**\n\t\tARCameraParam is used for loading AR camera parameters for use with ARController.\n\t\tUse by passing in an URL and a callback function.\n\n\t\t\tvar camera = new ARCameraParam('Data/camera_para.dat', function() {\n\t\t\t\tconsole.log('loaded camera', this.id);\n\t\t\t},\n\t\t\tfunction(err) {\n\t\t\t\tconsole.log('failed to load camera', err);\n\t\t\t});\n\n\t\t@exports ARCameraParam\n\t\t@constructor\n\n\t\t@param {string} src URL to load camera parameters from.\n\t\t@param {Function} onload Onload callback to be called on successful parameter loading.\n\t\t@param {Function} onerror Error callback to called when things don't work out.\n\t*/\n\tvar ARCameraParam = function(src, onload, onerror) {\n\t\tthis.id = -1;\n\t\tthis._src = '';\n\t\tthis.complete = false;\n\t\tthis.onload = onload;\n\t\tthis.onerror = onerror;\n\t\tif (src) {\n\t\t\tthis.load(src);\n\t\t}\n\t};\n\n\t/**\n\t\tLoads the given URL as camera parameters definition file into this ARCameraParam.\n\n\t\tCan only be called on an unloaded ARCameraParam instance.\n\n\t\t@param {string} src URL to load.\n\t*/\n\tARCameraParam.prototype.load = function(src) {\n\t\tif (this._src !== '') {\n\t\t\tthrow(\"ARCameraParam: Trying to load camera parameters twice.\")\n\t\t}\n\t\tthis._src = src;\n\t\tif (src) {\n\t\t\tvar self = this;\n\t\t\tartoolkit.loadCamera(src, function(id) {\n\t\t\t\tself.id = id;\n\t\t\t\tself.complete = true;\n\t\t\t\tself.onload();\n\t\t\t}, function(err) {\n\t\t\t\tself.onerror(err);\n\t\t\t});\n\t\t}\n\t};\n\n\tObject.defineProperty(ARCameraParam.prototype, 'src', {\n\t\tset: function(src) {\n\t\t\tthis.load(src);\n\t\t},\n\t\tget: function() {\n\t\t\treturn this._src;\n\t\t}\n\t});\n\n\t/**\n\t\tDestroys the camera parameter and frees associated Emscripten resources.\n\n\t*/\n\tARCameraParam.prototype.dispose = function() {\n\t\tif (this.id !== -1) {\n\t\t\tartoolkit.deleteCamera(this.id);\n\t\t}\n\t\tthis.id = -1;\n\t\tthis._src = '';\n\t\tthis.complete = false;\n\t};\n\n\n\n\t// ARToolKit exported JS API\n\t//\n\tvar artoolkit = {\n\n\t\tUNKNOWN_MARKER: -1,\n\t\tPATTERN_MARKER: 0,\n\t\tBARCODE_MARKER: 1,\n\n\t\tloadCamera: loadCamera,\n\n\t\taddMarker: addMarker,\n\t\taddMultiMarker: addMultiMarker\n\n\t};\n\n\tvar FUNCTIONS = [\n\t\t'setup',\n\t\t'teardown',\n\n\t\t'setLogLevel',\n\t\t'getLogLevel',\n\n\t\t'setDebugMode',\n\t\t'getDebugMode',\n\n\t\t'getProcessingImage',\n\n\t\t'setMarkerInfoDir',\n\t\t'setMarkerInfoVertex',\n\n\t\t'getTransMatSquare',\n\t\t'getTransMatSquareCont',\n\n\t\t'getTransMatMultiSquare',\n\t\t'getTransMatMultiSquareRobust',\n\n\t\t'getMultiMarkerNum',\n\t\t'getMultiMarkerCount',\n\n\t\t'detectMarker',\n\t\t'getMarkerNum',\n\n\t\t'getMarker',\n\t\t'getMultiEachMarker',\n\n\t\t'setProjectionNearPlane',\n\t\t'getProjectionNearPlane',\n\n\t\t'setProjectionFarPlane',\n\t\t'getProjectionFarPlane',\n\n\t\t'setThresholdMode',\n\t\t'getThresholdMode',\n\n\t\t'setThreshold',\n\t\t'getThreshold',\n\n\t\t'setPatternDetectionMode',\n\t\t'getPatternDetectionMode',\n\n\t\t'setMatrixCodeType',\n\t\t'getMatrixCodeType',\n\n\t\t'setLabelingMode',\n\t\t'getLabelingMode',\n\n\t\t'setPattRatio',\n\t\t'getPattRatio',\n\n\t\t'setImageProcMode',\n\t\t'getImageProcMode'\n\t];\n\n\tfunction runWhenLoaded() {\n\t\tFUNCTIONS.forEach(function(n) {\n\t\t\tartoolkit[n] = Module[n];\n\t\t});\n\n\t\tfor (var m in Module) {\n\t\t\tif (m.match(/^AR/))\n\t\t\tartoolkit[m] = Module[m];\n\t\t}\n\t}\n\n\tvar marker_count = 0;\n\tfunction addMarker(arId, url, callback) {\n\t\tvar filename = '/marker_' + marker_count++;\n\t\tajax(url, filename, function() {\n\t\t\tvar id = Module._addMarker(arId, filename);\n\t\t\tif (callback) callback(id);\n\t\t});\n\t}\n\n\tfunction bytesToString(array) {\n\t\treturn String.fromCharCode.apply(String, array);\n\t}\n\n\tfunction parseMultiFile(bytes) {\n\t\tvar str = bytesToString(bytes);\n\n\t\tvar lines = str.split('\\n');\n\n\t\tvar files = [];\n\n\t\tvar state = 0; // 0 - read,\n\t\tvar markers = 0;\n\n\t\tlines.forEach(function(line) {\n\t\t\tline = line.trim();\n\t\t\tif (!line || line.startsWith('#')) return; // FIXME: Should probably be `if (line.indexOf('#') === 0) { return; }`\n\n\t\t\tswitch (state) {\n\t\t\t\tcase 0:\n\t\t\t\t\tmarkers = +line;\n\t\t\t\t\tstate = 1;\n\t\t\t\t\treturn;\n\t\t\t\tcase 1: // filename or barcode\n\t\t\t\t\tif (!line.match(/^\\d+$/)) {\n\t\t\t\t\t\tfiles.push(line);\n\t\t\t\t\t}\n\t\t\t\tcase 2: // width\n\t\t\t\tcase 3: // matrices\n\t\t\t\tcase 4:\n\t\t\t\t\tstate++;\n\t\t\t\t\treturn;\n\t\t\t\tcase 5:\n\t\t\t\t\tstate = 1;\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\treturn files;\n\t}\n\n\tvar multi_marker_count = 0;\n\n\tfunction addMultiMarker(arId, url, callback) {\n\t\tvar filename = '/multi_marker_' + multi_marker_count++;\n\t\tajax(url, filename, function(bytes) {\n\t\t\tvar files = parseMultiFile(bytes);\n\n\t\t\tfunction ok() {\n\t\t\t\tvar markerID = Module._addMultiMarker(arId, filename);\n\t\t\t\tvar markerNum = Module.getMultiMarkerNum(arId, markerID);\n\t\t\t\tif (callback) callback(markerID, markerNum);\n\t\t\t}\n\n\t\t\tif (!files.length) return ok();\n\n\t\t\tvar path = url.split('/').slice(0, -1).join('/');\n\t\t\tfiles = files.map(function(file) {\n\t\t\t\treturn [path + '/' + file, file]\n\t\t\t});\n\n\t\t\tajaxDependencies(files, ok);\n\t\t});\n\t}\n\n\tvar camera_count = 0;\n\tfunction loadCamera(url, callback) {\n\t\tvar filename = '/camera_param_' + camera_count++;\n\t\tvar writeCallback = function() {\n\t\t\tvar id = Module._loadCamera(filename);\n\t\t\tif (callback) callback(id);\n\t\t};\n\t\tif (typeof url === 'object') { // Maybe it's a byte array\n\t\t\twriteByteArrayToFS(filename, url, writeCallback);\n\t\t} else if (url.indexOf(\"\\n\") > -1) { // Or a string with the camera param\n\t\t\twriteStringToFS(filename, url, writeCallback);\n\t\t} else {\n\t\t\tajax(url, filename, writeCallback);\n\t\t}\n\t}\n\n\n\t// transfer image\n\n\tfunction writeStringToFS(target, string, callback) {\n\t\tvar byteArray = new Uint8Array(string.length);\n\t\tfor (var i=0; i<byteArray.length; i++) {\n\t\t\tbyteArray[i] = string.charCodeAt(i) & 0xff;\n\t\t}\n\t\twriteByteArrayToFS(target, byteArray, callback);\n\t}\n\n\tfunction writeByteArrayToFS(target, byteArray, callback) {\n\t\tFS.writeFile(target, byteArray, { encoding: 'binary' });\n\t\t// console.log('FS written', target);\n\n\t\tcallback(byteArray);\n\t}\n\n\t// Eg.\n\t//\tajax('../bin/Data2/markers.dat', '/Data2/markers.dat', callback);\n\t//\tajax('../bin/Data/patt.hiro', '/patt.hiro', callback);\n\n\tfunction ajax(url, target, callback) {\n\t\tvar oReq = new XMLHttpRequest();\n\t\toReq.open('GET', url, true);\n\t\toReq.responseType = 'arraybuffer'; // blob arraybuffer\n\n\t\toReq.onload = function() {\n\t\t\t// console.log('ajax done for ', url);\n\t\t\tvar arrayBuffer = oReq.response;\n\t\t\tvar byteArray = new Uint8Array(arrayBuffer);\n\t\t\twriteByteArrayToFS(target, byteArray, callback);\n\t\t};\n\n\t\toReq.send();\n\t}\n\n\tfunction ajaxDependencies(files, callback) {\n\t\tvar next = files.pop();\n\t\tif (next) {\n\t\t\tajax(next[0], next[1], function() {\n\t\t\t\tajaxDependencies(files, callback);\n\t\t\t});\n\t\t} else {\n\t\t\tcallback();\n\t\t}\n\t}\n\n\t/* Exports */\n\twindow.artoolkit = artoolkit;\n\twindow.ARController = ARController;\n\twindow.ARCameraParam = ARCameraParam;\n\n\tif (window.Module) {\n\t\trunWhenLoaded();\n\t} else {\n\t\twindow.Module = {\n\t\t\tonRuntimeInitialized: function() {\n\t\t\t\trunWhenLoaded();\n\t\t\t}\n\t\t};\n\t}\n\n})();\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}